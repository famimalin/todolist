{"version":3,"sources":["actions/reducers/webReducers.js","actions/actionTypes.js","util/globalutil.js","actions/reducers/todoReducers.js","actions/reducers/index.js","actions/store/configureStore.js","actions/actionMiddlewares.js","components/commons/router/GRState.jsx","components/commons/router/GRStateProvider.jsx","components/commons/router/GRRouter.jsx","actions/creators/webActions.js","actions/creators/todoActions.js","actions/creators/index.js","stylecomponents/colors.js","stylecomponents/globalstyle.js","components/commons/router/GRRouterView.jsx","components/TopbarView.jsx","components/commons/TimeFormat.jsx","components/AddTodoView.jsx","components/EditTodoView.jsx","components/commons/router/GRSrefView.jsx","components/TodoListView.jsx","components/commons/router/GRRouterSwitchView.jsx","components/RootView.jsx","App.js","reportWebVitals.js","index.js"],"names":["reducers","actionTypes","getTodoDataStart","getTodoDataSuccess","getTodoDataError","addTodoSuccess","editTodoSuccess","finishTodoSuccess","deleteTodoSuccess","resetTodoSuccess","ORIGIN_URL","window","location","origin","TODO_CATEGORY_TYPE","ALL","SELF","WORK","BUY","TODO_STATE","IDLE","FINISH","DELETE","globalutil","shallowCopy","object","undefined","JSON","parse","stringify","getTodoCategoryTypeText","type","getTodoStateText","state","action","isTodoLoading","Object","assign","isTodoLoadError","todoMap","todoList","todoData","payload","new_todoMap","new_todoList","id","todo","addTodoToList","isTodoLoaded","removeAllListTodo","stateTodoMap","stateTodoList","stopSort","category","listObj","addTodoToListObj","todotime","createtime","today","others","success","push","sortTodoList","list","sort","idA","idB","todoA","todoB","key","filter","item_id","createWebReducers","initialState","hasOwnProperty","createTodoReducers","history","createHistory","middleWare","applyMiddleware","thunk","store","next","err","console","error","routerMiddleware","webDefaultState","actionReducers","combineReducers","web","reducerCreators","router","connectRouter","storeObject","actionStore","createStore","composeWithDevTools","GRState","name","path","Error","this","parent","dotIndex","lastIndexOf","substr","statename","indexOf","params","url_param","param","url_params","split","url","i","length","concat","rootState","nullState","cache","Map","STATES","HOME","ADD","EDIT","$stateProvider","states","levelStateMapList","slashStateMapList","absolutePathMap","current","otherwisePath","removeRootState","dotCount","absolutePath","getPath","slashCount","newStateName","grState","stateMap","newState","parentStateMap","routes","parentState","resultList","slashList","isFind","absoluteSlashList","partPath","absolutePartPath","updateHistory","getStateByPath","pathname","search","querys","locationState","searchIndex","last","pop","isActive","mapKey","getCacheKey","has","get","getPathname","getQueryUrl","getUrl","set","keys","reduce","acc","index","value","searchString","Array","isArray","item","isUnknowState","includes","c_params","pkey","c_querys","qkey","slice","otherwise","PATHS","GRRouter","getReactRouterList","updateCurrent","updateCurrentByPath","updateCurrentByState","getCurrent","hasState","getOtherwise","getHistory","LOCAL_STORAGE_TODO_DATA_KEY","updateStorageTodoMap","json","localStorage","setItem","actionCreators","webActionCreators","grStateGo","dispatch","grStateReplace","replace","grStateGoOtherwise","todoActionCreators","getTodoData","Promise","resolve","reject","setTimeout","data","getItem","getStorageTodoMap","addTodo","title","time","now","Date","remark","editTodo","old_todo","finishTodo","deleteTodo","resetTodo","hex","x","parseInt","toString","Colors","Main","Dark","Dark2","Dark3","Dark4","Dark5","Dark6","Dark7","Dark8","LightBlue","AllColor","SelfColor","WorkColor","BuyColor","Red","LightenDarkenColor","col","amt","usePound","num","r","b","g","_hex","RGBA","opacity","m","result","exec","TopbarHeight","rotate360","keyframes","imageBackgroundCSS","css","ImgBackground","RootContainer","styled","div","ViewContainer","Topbar","TopbarMenuBtn","TopbarMenuTitle","TopbarActionTitle","TopbarActionBtn","GlobalStyle","ContainerMaxWidth","TopbarZindex","TopbarActionLeftBtn","TopbarActionRightBtn","Spin","props","display","size","margin","borderWidth","bgColor","color","LoadingContainer","height","LoadingSpinCenter","StatusContainer","contentPadding","BGColor","StateContainer","StateContent","StateTtile","h3","Title","StateDescription","p","Paragraph","StateAction","GRRouterView","webActions","listen","new_location","new_action","children","PureComponent","connect","bindActionCreators","forwardRef","Overlay","show","Sidebar","SidebarContent","SidebarOverlay","SidebarHead","SidebarHeadText","NavItem","active","NavItemAll","NavItemSelf","NavItemWork","NavItemBuy","NavItemIcon","TopbarView","isShowMenu","openMenu","bind","closeMenu","onNavClick","setState","onClick","className","leftComponent","rightComponent","layoutType","renderMenuTopbar","renderActionTopbar","defaultProps","dayjs","locale","FORMAT_TYPE","TIME_AGO","SIMPLE_TIME_AGO","SIMPLE_FULL_TIME","FORMAT_MEDIA_PLAY_TIME","TIME_STRING","TIME_DASH_STRING","FULLTIME_DASH_STRING","TIME_SLASH_STRING","TIME_CHINESE_STRING","SIMPLE_MEDIA_PLAY_TIME","ForamtMethod","format","TimeFormat","formatted","aDay","date","getFullYear","getTime","fromNow","isNaN","minutes","Math","floor","seconds","round","hours","formatTime","React","memo","TitleTextarea","AutoSizeTextarea","OptionRow","label","OptionRowIcon","OptionRowResult","OptionRowHideSelect","select","OptionRowDateInput","input","OptionRowHideDateInput","AddTodoView","dateStr","goBack","onTitleChange","onCategoryChange","onTimeChange","sumbit","prevState","event","target","trim","todoActions","minRows","placeholder","onChange","isBrowser","isMobile","DeleteButton","EditTodoView","isError","delete","initTodo","then","prevProps","old_id","confirmAlert","message","buttons","overlayClassName","GRSrefView","clean_props","stylecomponent","newNavLink","padding","measure","rest","ViewComponent","withComponent","NavLink","to","init","nextProps","newTo","Content","ListTitle","List","ListEmpty","Item","CheckBox","ItemTextWrapper","ItemTitle","ItemMeta","AddBtn","TodoListView","foldMap","toogleFold","toogleFinishTodo","isFold","new_foldMap","stopPropagation","hideEmptyState","isEmpty","map","renderItem","renderList","GRRouterSwitchView","render","exact","component","RootView","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56c3aee9.chunk.js","sourcesContent":["/*=====================================\r\n\tweb reducer\r\n\r\n\tAuthor: Gray\r\n\tCreateTime: 2021 / 07 / 27\r\n=====================================*/\r\n\r\n/*--------------------------\r\n    Reducers\r\n--------------------------*/\r\nconst reducers = {};\r\n\r\n/*--------------------------\r\n    Method\r\n--------------------------*/\r\n\r\n/*--------------------------\r\n\tExport\r\n--------------------------*/\r\nexport default function createReducers(initialState) {\r\n\treturn function reducer(state = initialState, action) {\r\n\t\tif (reducers.hasOwnProperty(action.type)) {\r\n\t\t\treturn reducers[action.type](state, action);\r\n\t\t} else {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t};\r\n};","/*=====================================\r\n    Action types\r\n\r\n    Author: Gray\r\n    CreateTime: 2021 / 07 / 27\r\n=====================================*/\r\n\r\n/*--------------------------\r\n    Variable\r\n--------------------------*/\r\n\r\n// todo actions\r\nconst getTodoDataStart = \"getTodoDataStart\";\r\nconst getTodoDataSuccess = \"getTodoDataSuccess\";\r\nconst getTodoDataError = \"getTodoDataError\";\r\nconst addTodoSuccess = \"addTodoSuccess\";\r\nconst editTodoSuccess = \"editTodoSuccess\";\r\nconst finishTodoSuccess = \"finishTodoSuccess\";\r\nconst deleteTodoSuccess = \"deleteTodoSuccess\";\r\nconst resetTodoSuccess = \"resetTodoSuccess\";\r\n\r\n/*--------------------------\r\n    Export\r\n--------------------------*/\r\nconst actionTypes = {\r\n    getTodoDataStart,\r\n    getTodoDataSuccess,\r\n    getTodoDataError,\r\n    addTodoSuccess,\r\n    editTodoSuccess,\r\n    finishTodoSuccess,\r\n    deleteTodoSuccess,\r\n    resetTodoSuccess,\r\n};\r\n\r\nexport default actionTypes;","/*=====================================\r\n    Global\r\n\r\n    Author: Gray\r\n    CreateTime: 2021 / 07 / 27\r\n=====================================*/\r\n\r\n/*--------------------------\r\n    Variable\r\n--------------------------*/\r\n\r\n// 網域 origin url\r\nconst ORIGIN_URL = window.location.origin;\r\n\r\n// todo 分類\r\nconst TODO_CATEGORY_TYPE = {\r\n    ALL: 'all',\r\n    SELF: 'self',\r\n    WORK: 'work',\r\n    BUY: 'buy',\r\n};\r\n\r\n// todo 狀態\r\nconst TODO_STATE = {\r\n    IDLE: 0,\r\n    FINISH: 100,\r\n    DELETE: 200,\r\n};\r\n\r\n/*--------------------------\r\n    Method\r\n--------------------------*/\r\n\r\n// ------------------------------\r\n// 簡易複製 object\r\n// ------------------------------\r\nfunction shallowCopy(object) {\r\n\r\n    if(object === undefined) {\r\n        return undefined;\r\n    }\r\n\r\n    return JSON.parse(JSON.stringify(object))\r\n}\r\n\r\n// ------------------------------\r\n// 取得 todo 分類文案\r\n// ------------------------------\r\nfunction getTodoCategoryTypeText(type) {\r\n\r\n    switch(type) {\r\n        case TODO_CATEGORY_TYPE.ALL:\r\n            return \"全部\";\r\n        case TODO_CATEGORY_TYPE.SELF:\r\n            return \"個人\";\r\n        case TODO_CATEGORY_TYPE.WORK:\r\n            return \"工作\";\r\n        case TODO_CATEGORY_TYPE.BUY:\r\n            return \"購物清單\";\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\n// ------------------------------\r\n// 取得 todo 狀態文案\r\n// ------------------------------\r\nfunction getTodoStateText(state) {\r\n    \r\n    switch(state) {\r\n        case TODO_STATE.IDLE:\r\n            return \"待辦\";\r\n        case TODO_STATE.FINISH:\r\n            return \"完成\";\r\n        case TODO_STATE.DELETE:\r\n            return \"刪除\";\r\n        default:\r\n            return \"\";\r\n    }\r\n}\r\n\r\n/*--------------------------\r\n    Export\r\n--------------------------*/\r\nconst globalutil = {\r\n    /*--------------------------\r\n        Variable\r\n    --------------------------*/\r\n    ORIGIN_URL, // 網域 origin url\r\n    TODO_CATEGORY_TYPE, // todo 分類\r\n    TODO_STATE, // todo 狀態\r\n\r\n    /*--------------------------\r\n        Method\r\n    --------------------------*/\r\n    shallowCopy, // 簡易複製 object\r\n    getTodoCategoryTypeText, // 取得 todo 分類文案\r\n    getTodoStateText, // 取得 todo 狀態文案\r\n};\r\n\r\nexport default globalutil;","/*=====================================\r\n\ttodo reducer\r\n\r\n\tAuthor: Gray\r\n\tCreateTime: 2021 / 07 / 28\r\n=====================================*/\r\nimport actionTypes from '../actionTypes';\r\nimport globalutil from '../../util/globalutil';\r\n\r\n/*--------------------------\r\n\tVariable\r\n--------------------------*/\r\nconst {\r\n    TODO_CATEGORY_TYPE,\r\n    TODO_STATE,\r\n} = globalutil;\r\n\r\nconst ONE_DAY = 1000 * 60 * 60 * 24;\r\n\r\n/*--------------------------\r\n    Reducers\r\n--------------------------*/\r\nconst reducers = {\r\n\t// 開始取得todo資料\r\n\t[actionTypes.getTodoDataStart]: (state, action) => getTodoDataStart(state, action),\r\n\t// 成功取得todo資料\r\n\t[actionTypes.getTodoDataSuccess]: (state, action) => getTodoDataSuccess(state, action),\r\n\t// 失敗取得todo資料\r\n\t[actionTypes.getTodoDataError]: (state, action) => getTodoDataError(state, action),\r\n\t// 成功新增todo資料\r\n\t[actionTypes.addTodoSuccess]: (state, action) => addTodoSuccess(state, action),\r\n\t// 成功編輯todo資料\r\n\t[actionTypes.editTodoSuccess]: (state, action) => editTodoSuccess(state, action),\r\n\t// 成功完成 Todo\r\n\t[actionTypes.finishTodoSuccess]: (state, action) => finishTodoSuccess(state, action),\r\n\t// 成功刪除 Todo\r\n\t[actionTypes.deleteTodoSuccess]: (state, action) => deleteTodoSuccess(state, action),\r\n\t// 成功復原 Todo\r\n\t[actionTypes.resetTodoSuccess]: (state, action) => resetTodoSuccess(state, action),\r\n};\r\n\r\n/*--------------------------\r\n    Method\r\n--------------------------*/\r\n\r\n// ------------------------------\r\n// [private] addTodoToList\r\n// ------------------------------\r\nfunction addTodoToList(todo, stateTodoMap, stateTodoList, stopSort) {\r\n\r\n\tconst {\r\n\t\tcategory,\r\n\t} = todo;\r\n\t\r\n\tlet listObj = undefined;\r\n\r\n    switch(category) {\r\n        case TODO_CATEGORY_TYPE.SELF:\r\n        case TODO_CATEGORY_TYPE.WORK:\r\n        case TODO_CATEGORY_TYPE.BUY:\r\n            listObj = stateTodoList[category] || {};\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n\r\n    if(listObj) {\r\n        listObj = addTodoToListObj(todo, stateTodoMap, listObj, stopSort);\r\n        stateTodoList[category] = listObj;\r\n    }\r\n\r\n    listObj = stateTodoList[TODO_CATEGORY_TYPE.ALL] || {};\r\n    listObj = addTodoToListObj(todo, stateTodoMap, listObj, stopSort);\r\n    stateTodoList[TODO_CATEGORY_TYPE.ALL] = listObj;\r\n}\r\n\r\n// ------------------------------\r\n// [private] addTodoToListObj\r\n// ------------------------------\r\nfunction addTodoToListObj(todo, stateTodoMap, listObj, stopSort) {\r\n\r\n    if(listObj) {\r\n\r\n        const {\r\n            id,\r\n            todotime,\r\n            createtime,\r\n            state,\r\n        } = todo;\r\n\r\n        let today = listObj.today || [];\r\n        let others = listObj.others || [];\r\n        let success = listObj.success || [];\r\n\r\n        switch(state) {\r\n            case TODO_STATE.IDLE:\r\n                if(todotime - createtime >= ONE_DAY) {\r\n                    others.push(id);\r\n                    others = stopSort ? others : sortTodoList(others, stateTodoMap);\r\n                } else {\r\n                    today.push(id);\r\n                    today = stopSort ? today : sortTodoList(today, stateTodoMap);\r\n                }\r\n                break;\r\n            case TODO_STATE.FINISH:\r\n                success.push(id);\r\n                success = stopSort ? success : sortTodoList(success, stateTodoMap);\r\n                break;\r\n            case TODO_STATE.DELETE:\r\n            default:\r\n                break;\r\n        }\r\n\r\n        listObj.today = today;\r\n        listObj.others = others;\r\n        listObj.success = success;\r\n    }\r\n\r\n    return listObj;\r\n}\r\n\r\n// ------------------------------\r\n// [private] sortTodoList\r\n// ------------------------------\r\nfunction sortTodoList(list, stateTodoMap) {\r\n\r\n    list.sort(function(idA, idB) {\r\n\r\n        let todoA = stateTodoMap[idA];\r\n        let todoB = stateTodoMap[idB];\r\n        let todotimeA = todoA ? todoA.todotime : 0; \r\n        let todotimeB = todoB ? todoB.todotime : 0; \r\n\r\n        return todotimeA - todotimeB;\r\n    });\r\n\r\n    return list;\r\n}\r\n\r\n// ------------------------------\r\n// [private] removeAllListTodo\r\n// ------------------------------\r\nfunction removeAllListTodo(id, stateTodoList) {\r\n\r\n    for(let key in TODO_CATEGORY_TYPE) {\r\n        let type = TODO_CATEGORY_TYPE[key];\r\n        let listObj = stateTodoList[type];\r\n\r\n        if(listObj) {\r\n            let today = listObj.today || [];\r\n            let others = listObj.others || [];\r\n            let success = listObj.success || [];\r\n            \r\n            today = today.filter((item_id) => {\r\n                return item_id !== id;\r\n            });\r\n    \r\n            others = others.filter((item_id) => {\r\n                return item_id !== id;\r\n            });\r\n    \r\n            success = success.filter((item_id) => {\r\n                return item_id !== id;\r\n            });\r\n    \r\n            listObj.today = today;\r\n            listObj.others = others;\r\n            listObj.success = success;\r\n\r\n            stateTodoList[type] = listObj;\r\n        }\r\n    }\r\n}\r\n\r\n// ------------------------------\r\n// 開始取得todo資料\r\n// ------------------------------\r\nfunction getTodoDataStart(state, action) {\r\n\t\r\n\tconst {\r\n\t\tisTodoLoading,\r\n\t} = state;\r\n\r\n\tif(isTodoLoading) {\r\n\t\treturn state;\r\n\t}\r\n\r\n\treturn Object.assign({}, state, {\r\n        isTodoLoading: true,\r\n        isTodoLoadError: false,\r\n    });\r\n}\r\n\r\n// ------------------------------\r\n// 成功取得todo資料\r\n// ------------------------------\r\nfunction getTodoDataSuccess(state, action) {\r\n\r\n\tconst {\r\n\t\ttodoMap,\r\n\t\ttodoList,\r\n\t} = state;\r\n\r\n\tconst {\r\n        payload,\r\n    } = action;\r\n\r\n\tconst {\r\n\t\ttodoData,\r\n\t} = payload;\r\n\r\n\tif(!todoData) {\r\n\t\treturn state;\r\n\t}\r\n\r\n\tlet new_todoMap = Object.assign({}, todoMap);\r\n\tlet new_todoList = Object.assign({}, todoList);\r\n\r\n\tfor(let id in todoData) {\r\n\t\tlet todo = todoData[id];\r\n\r\n\t\tnew_todoMap[id] = todo; \r\n\r\n\t\taddTodoToList(todo, new_todoMap, new_todoList, true);\r\n\t}\r\n\r\n\treturn Object.assign({}, state, {\r\n\t\tisTodoLoading: false,\r\n\t\tisTodoLoaded: true,\r\n        todoMap: new_todoMap,\r\n        todoList: new_todoList,\r\n    });\r\n}\r\n\r\n// ------------------------------\r\n// 失敗取得todo資料\r\n// ------------------------------\r\nfunction getTodoDataError(state, action) {\r\n\r\n\tconst {\r\n\t\tisTodoLoadError,\r\n\t} = state;\r\n\r\n\tif(isTodoLoadError) {\r\n\t\treturn state;\r\n\t}\r\n\r\n\treturn Object.assign({}, state, {\r\n        isTodoLoading: false,\r\n        isTodoLoadError: true,\r\n    });\r\n}\r\n\r\n// ------------------------------\r\n// 成功新增todo資料\r\n// ------------------------------\r\nfunction addTodoSuccess(state, action) {\r\n\r\n\tconst {\r\n\t\ttodoMap,\r\n\t\ttodoList,\r\n\t} = state;\r\n\r\n\tconst {\r\n\t\tpayload,\r\n\t} = action;\r\n\r\n\tconst {\r\n\t\ttodo,\r\n\t} = payload;\r\n\r\n\tlet new_todoMap = Object.assign({}, todoMap);\r\n\tlet new_todoList = Object.assign({}, todoList);\r\n\r\n\tnew_todoMap[todo.id] = todo;\r\n\r\n\taddTodoToList(todo, new_todoMap, new_todoList, false);\r\n\r\n\treturn Object.assign({}, state, {\r\n        todoMap: new_todoMap,\r\n        todoList: new_todoList,\r\n    });\r\n}\r\n\r\n// ------------------------------\r\n// 成功編輯todo資料\r\n// ------------------------------\r\nfunction editTodoSuccess(state, action) {\r\n\r\n\tconst {\r\n\t\ttodoMap,\r\n\t\ttodoList,\r\n\t} = state;\r\n\r\n\tconst {\r\n\t\tpayload,\r\n\t} = action;\r\n\r\n\tconst {\r\n\t\ttodo,\r\n\t} = payload;\r\n\r\n\tlet new_todoMap = Object.assign({}, todoMap);\r\n\tlet new_todoList = Object.assign({}, todoList);\r\n\r\n\tnew_todoMap[todo.id] = todo;\r\n\r\n\tremoveAllListTodo(todo.id, new_todoList);\r\n\taddTodoToList(todo, new_todoMap, new_todoList, false);\r\n\r\n\treturn Object.assign({}, state, {\r\n        todoMap: new_todoMap,\r\n        todoList: new_todoList,\r\n    });\r\n}\r\n\r\n// ------------------------------\r\n// 成功完成 Todo\r\n// ------------------------------\r\nfunction finishTodoSuccess(state, action) {\r\n\r\n\tconst {\r\n\t\ttodoMap,\r\n\t\ttodoList,\r\n\t} = state;\r\n\r\n\tconst {\r\n\t\tpayload,\r\n\t} = action;\r\n\r\n\tconst {\r\n\t\ttodo,\r\n\t} = payload;\r\n\r\n\tlet new_todoMap = Object.assign({}, todoMap);\r\n\tlet new_todoList = Object.assign({}, todoList);\r\n\r\n\tnew_todoMap[todo.id] = todo;\r\n\r\n\tremoveAllListTodo(todo.id, new_todoList);\r\n\taddTodoToList(todo, new_todoMap, new_todoList, false);\r\n\r\n\treturn Object.assign({}, state, {\r\n        todoMap: new_todoMap,\r\n        todoList: new_todoList,\r\n    });\r\n}\r\n\r\n// ------------------------------\r\n// 成功刪除 Todo\r\n// ------------------------------\r\nfunction deleteTodoSuccess(state, action) {\r\n\r\n\tconst {\r\n\t\ttodoMap,\r\n\t\ttodoList,\r\n\t} = state;\r\n\r\n\tconst {\r\n\t\tpayload,\r\n\t} = action;\r\n\r\n\tconst {\r\n\t\ttodo,\r\n\t} = payload;\r\n\r\n\tlet new_todoMap = Object.assign({}, todoMap);\r\n\tlet new_todoList = Object.assign({}, todoList);\r\n\r\n\tnew_todoMap[todo.id] = todo;\r\n\r\n\tremoveAllListTodo(todo.id, new_todoList);\r\n\r\n\treturn Object.assign({}, state, {\r\n        todoMap: new_todoMap,\r\n        todoList: new_todoList,\r\n    });\r\n}\r\n\r\n// ------------------------------\r\n// 成功復原 Todo\r\n// ------------------------------\r\nfunction resetTodoSuccess(state, action) {\r\n\r\n\tconst {\r\n\t\ttodoMap,\r\n\t\ttodoList,\r\n\t} = state;\r\n\r\n\tconst {\r\n\t\tpayload,\r\n\t} = action;\r\n\r\n\tconst {\r\n\t\ttodo,\r\n\t} = payload;\r\n\r\n\tlet new_todoMap = Object.assign({}, todoMap);\r\n\tlet new_todoList = Object.assign({}, todoList);\r\n\r\n\tnew_todoMap[todo.id] = todo;\r\n\r\n\tremoveAllListTodo(todo.id, new_todoList);\r\n\taddTodoToList(todo, new_todoMap, new_todoList, false);\r\n\r\n\treturn Object.assign({}, state, {\r\n        todoMap: new_todoMap,\r\n        todoList: new_todoList,\r\n    });\r\n}\r\n\r\n/*--------------------------\r\n\tExport\r\n--------------------------*/\r\nexport default function createReducers(initialState) {\r\n\treturn function reducer(state = initialState, action) {\r\n\t\tif (reducers.hasOwnProperty(action.type)) {\r\n\t\t\treturn reducers[action.type](state, action);\r\n\t\t} else {\r\n\t\t\treturn state;\r\n\t\t}\r\n\t};\r\n};","import createWebReducers from './webReducers';\r\nimport createTodoReducers from './todoReducers';\r\n\r\nconst reducers = {\r\n\tcreateWebReducers,\r\n\tcreateTodoReducers,\r\n};\r\n\r\nexport default reducers;","/*=====================================\r\n    config\r\n\r\n    Author: Gray\r\n    CreateTime: 2021 / 07 / 27\r\n=====================================*/\r\n\r\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { routerMiddleware } from 'react-router-redux';\r\nimport { connectRouter } from 'connected-react-router';\r\nimport { createBrowserHistory as createHistory } from 'history';\r\nimport reducerCreators from '../reducers';\r\nimport { logger, crashReporter } from '../actionMiddlewares';\r\n\r\nconst history = createHistory();\r\nconst middleWare = applyMiddleware(thunk,logger, crashReporter, routerMiddleware(history));\r\n\r\n/*--------------------------\r\n    State Init\r\n--------------------------*/\r\nconst webDefaultState = {\r\n    history: history,\r\n};\r\n\r\nconst todoDefaultState = {\r\n    isTodoLoading: false,\r\n    isTodoLoadError: false,\r\n    isTodoLoaded: false,\r\n    todoMap: {},\r\n    todoList: {\r\n        // [key] : {today: [], others: []},\r\n        // key: all, self, work, buy...\r\n    },\r\n};\r\n\r\n/*--------------------------\r\n    Reducer Export\r\n--------------------------*/\r\nconst actionReducers = combineReducers({\r\n    web: reducerCreators.createWebReducers({}),\r\n    todo: reducerCreators.createTodoReducers({}),\r\n    router: connectRouter(history),\r\n});\r\n\r\nconst storeObject = {\r\n    web: webDefaultState,\r\n    todo: todoDefaultState,\r\n};\r\n\r\nconst actionStore = createStore(actionReducers, storeObject, composeWithDevTools(middleWare));\r\n\r\nexport default actionStore;","/*=====================================\r\n    actionMiddlewares\r\n\r\n    Author: Gray\r\n    CreateTime: 2021 / 07 / 27\r\n=====================================*/\r\n\r\nconst logger = store => next => action => {\r\n    let result = next(action);\r\n    return result;\r\n};\r\n  \r\nconst crashReporter = store => next => action => {\r\n    try {\r\n        return next(action);\r\n    } catch (err) {\r\n        console.error(err);\r\n        throw err;\r\n    }\r\n};\r\n  \r\nexport { logger, crashReporter };  ","/*=====================================\r\n    GR state class\r\n\r\n    Author: Gray\r\n    createtime: 2021 / 07 / 27\r\n=====================================*/\r\n\r\n/*--------------------------\r\n    class\r\n--------------------------*/\r\nclass GRState {\r\n\r\n    // ------------------------------\r\n    // constructor\r\n    // ------------------------------\r\n    constructor(name, path) {\r\n\r\n        if(name === undefined || path === undefined) {\r\n            throw new Error('GRState constructor error');\r\n        }\r\n\r\n        this.name = name;\r\n        this.path = path;\r\n        this.parent = undefined;\r\n\r\n        const dotIndex = this.name.lastIndexOf('.');\r\n\r\n        if(dotIndex !== -1) {\r\n            this.parent = this.name.substr(0, dotIndex);\r\n        }\r\n    }\r\n\r\n    // ------------------------------\r\n    // 傳入的state是否為目前state的state或是父state\r\n    // ------------------------------\r\n    includes(statename) {\r\n\r\n        if(!statename) {\r\n            return false;\r\n        }\r\n\r\n        const index = this.name.indexOf(statename);\r\n\r\n        return index === 0;\r\n    }\r\n\r\n    // ------------------------------\r\n    // 取得實際網址\r\n    // ------------------------------\r\n    getUrl(params) {\r\n\r\n        if(this.path === '' || this.path === '/') {\r\n            return '/';\r\n        }\r\n        \r\n        var url_params = this.path.split('/');\r\n        var url_param;\r\n        var param;\r\n        var url = \"\";\r\n\r\n        for(var i = 0; i < url_params.length; i++) {\r\n            url_param = url_params[i];\r\n\r\n            if(url_param.indexOf(':') === 0) {\r\n                url_param = url_param.substr(1);\r\n                param = (params && (params[url_param] !== undefined || params[url_param] !== null)) ? params[url_param] : \"\";\r\n                url = url.concat(\"/\").concat(param);\r\n            } else if(url_param) {\r\n                url = url.concat(\"/\").concat(url_param);\r\n            }\r\n        }\r\n\r\n        return url;\r\n    }\r\n}\r\n\r\n/*--------------------------\r\n    export\r\n--------------------------*/\r\nexport default GRState;","/*=====================================\r\n    GR state provider class\r\n\r\n    Author: Gray\r\n    createtime: 2021 / 07 / 27\r\n=====================================*/\r\n\r\n/*--------------------------\r\n    Import\r\n--------------------------*/\r\nimport GRState from './GRState';\r\nimport { parse } from 'qs';\r\n\r\n/*--------------------------\r\n    Variables\r\n--------------------------*/\r\nconst rootState = {\r\n    name: \"_ROOT_\",\r\n    path: \"/\",\r\n};\r\n\r\nconst nullState = {\r\n    name: \"_UNKNOW_\",\r\n    path: undefined,\r\n};\r\n\r\nvar cache = new Map();\r\n\r\n/*--------------------------\r\n    class\r\n--------------------------*/\r\nclass GRStateProvider {\r\n\r\n    // ------------------------------\r\n    // constructor\r\n    // ------------------------------\r\n    constructor() {\r\n        this.states = {}; // 所有state, {statename, GRState}\r\n        this.levelStateMapList = []; // 依造層級分state（用來轉換 react router list用的）\r\n        this.slashStateMapList = []; // 依造path /的各數來分state（用來判斷目前path是在哪個state用的）\r\n        this.absolutePathMap = {}; // state對應到的實際網址 {statename, absolutePath}\r\n        this.current = undefined;\r\n        this.otherwisePath = undefined;\r\n        this.history = [];\r\n\r\n        // 建一個root state\r\n        this.state(rootState.name, rootState.path);\r\n    }\r\n\r\n    // ------------------------------\r\n    // 新增新的state\r\n    // ------------------------------\r\n    state(statename, path) {\r\n\r\n        if(this.states[statename]) {\r\n            throw new Error('GRState state error, has same statename ' + statename);\r\n        }\r\n\r\n        var state = new GRState(statename, path);\r\n\r\n        // 如果有設定root state，則移除預設的\r\n        if(statename !==  rootState.name && state.path === rootState.path) {\r\n            this.removeRootState();\r\n        }\r\n\r\n        this.states[statename] = state;\r\n\r\n        // 依造層級分state\r\n        var dotList = statename.split('.');\r\n        var dotCount = dotList.length - 1;\r\n\r\n        if(!this.levelStateMapList[dotCount]) {\r\n            this.levelStateMapList[dotCount] = {};\r\n        }\r\n\r\n        this.levelStateMapList[dotCount][statename] = state;\r\n\r\n        // 記錄state對應到的實際網址\r\n        var absolutePath = this.getPath(statename);\r\n        this.absolutePathMap[statename] = absolutePath;\r\n\r\n        // 依造absolutePath /的各數來分state\r\n        var slashList = absolutePath.split('/');\r\n        var slashCount = slashList.length - 1;\r\n\r\n        if(!this.slashStateMapList[slashCount]) {\r\n            this.slashStateMapList[slashCount] = {};\r\n        }\r\n\r\n        this.slashStateMapList[slashCount][statename] = state;\r\n\r\n        return this;\r\n    }\r\n\r\n    // ------------------------------\r\n    // 設定otherwise\r\n    // ------------------------------\r\n    otherwise(otherwisePath) {\r\n\r\n        this.otherwisePath = otherwisePath;\r\n    }\r\n\r\n    // ------------------------------\r\n    // 移除預設root state\r\n    // ------------------------------\r\n    removeRootState() {\r\n\r\n        delete this.states[rootState.name];\r\n        delete this.absolutePathMap[rootState.name];\r\n\r\n        if(this.levelStateMapList[0]) {\r\n            delete this.levelStateMapList[0][rootState.name];\r\n        }\r\n        if(this.slashStateMapList[1]) {\r\n            delete this.slashStateMapList[1][rootState.name];\r\n        }\r\n    }\r\n\r\n    // ------------------------------\r\n    // 取得state實際path\r\n    // ------------------------------\r\n    getPath(statename) {\r\n\r\n        var path = \"\";\r\n        var state_path = \"\";\r\n        var newStateName = statename;\r\n        var grState = this.states[newStateName];\r\n        var dotIndex;\r\n\r\n        while(grState) {\r\n            state_path = grState.path;\r\n            path = state_path.concat(path);\r\n\r\n            dotIndex = newStateName.lastIndexOf('.');\r\n\r\n            if(dotIndex > 0) {\r\n                newStateName = newStateName.substr(0, dotIndex);\r\n                grState = this.states[newStateName];\r\n\r\n                if(!grState) {\r\n                    throw new Error('GRState getPath error, no parent ' + newStateName);\r\n                }\r\n\r\n            } else {\r\n                grState = undefined;\r\n            }\r\n        };\r\n\r\n        return path;\r\n    }\r\n\r\n    // ------------------------------\r\n    // 取得 react router 所需要的陣列\r\n    // ------------------------------\r\n    getReactRouterList() {\r\n\r\n        var stateMap;\r\n        var statename;\r\n        var state;\r\n        var newState;\r\n\r\n        // 將子元素放入父元素\r\n        if(this.levelStateMapList.length > 1) {\r\n            for(var i = this.levelStateMapList.length - 1; i > 0; i--) {\r\n                stateMap = this.levelStateMapList[i];\r\n                var parentStateMap = this.levelStateMapList[i - 1];\r\n\r\n                for(statename in stateMap) {\r\n\r\n                    if(statename === rootState.name) {\r\n                        continue;\r\n                    }\r\n\r\n                    state = stateMap[statename];\r\n\r\n                    newState = {\r\n                        path: this.absolutePathMap[statename],\r\n                        routes: state.routes,\r\n                    };\r\n\r\n                    var parentState = parentStateMap[state.parent];\r\n\r\n                    if(!parentState) {\r\n                        throw new Error('GRState getReactRouterList error, wrong relationship on ' + statename);\r\n                    }\r\n\r\n                    if(!parentState.routes) {\r\n                        parentState.routes = [];\r\n                    }\r\n\r\n                    parentState.routes.push(\r\n                        newState\r\n                    );\r\n                }\r\n            }\r\n        }\r\n\r\n        // format 父元素\r\n        stateMap = this.levelStateMapList[0];\r\n        var resultList = [];\r\n\r\n        for(statename in stateMap) {\r\n\r\n            if(statename === rootState.name) {\r\n                continue;\r\n            }\r\n\r\n            state = stateMap[statename];\r\n\r\n            newState = {\r\n                path: this.absolutePathMap[statename],\r\n                routes: state.routes,\r\n            };\r\n\r\n            resultList.push(newState);\r\n        }\r\n\r\n        return resultList;\r\n    }\r\n\r\n    // ------------------------------\r\n    // 由網址取得目前state\r\n    // ------------------------------\r\n    getStateByPath(path) {\r\n\r\n        if(!path || typeof path !== 'string') {\r\n            return undefined;\r\n        }\r\n\r\n        var slashList = path.split('/');\r\n        var slashCount = slashList.length - 1;\r\n        var stateMap = this.slashStateMapList[slashCount];\r\n        var isFind = false;\r\n        var params = undefined;\r\n\r\n        for(var statename in stateMap) {\r\n            var state = stateMap[statename];\r\n            var absolutePath = this.absolutePathMap[statename];\r\n            var absoluteSlashList = absolutePath.split('/');\r\n\r\n            isFind = true;\r\n            params = {};\r\n\r\n            for(var i = 0; i <= slashCount; i++) {\r\n                var partPath = slashList[i];\r\n                var absolutePartPath = absoluteSlashList[i];\r\n\r\n                if(absolutePartPath.indexOf(\":\") === 0) {\r\n                    var key = absolutePartPath.substr(1);\r\n                    params[key] = partPath;\r\n                } else if(partPath !== absolutePartPath) {\r\n                    isFind = false;\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if(isFind) {\r\n                return {\r\n                    state: state,\r\n                    params: params,\r\n                };\r\n            }\r\n        }\r\n\r\n        return undefined;\r\n    }\r\n\r\n    // ------------------------------\r\n    // 更新目前state\r\n    // action : PUSH, REPLACE, or POP\r\n    // ------------------------------\r\n    updateCurrent(location, action) {\r\n\r\n        if(!location) {\r\n            this.current = {\r\n                state: nullState,\r\n            };\r\n\r\n            this.updateHistory(action);\r\n            return false;\r\n        }\r\n\r\n        var current = this.getStateByPath(location.pathname);\r\n\r\n        if(!current) {\r\n            this.current = {\r\n                state: Object.assign({}, nullState, {\r\n                    path: location.pathname,\r\n                }),\r\n            };\r\n\r\n            this.updateHistory(action);\r\n            return false;\r\n        }\r\n\r\n        if(location.search) {\r\n            current.querys = parse(location.search.substr(1));\r\n        }\r\n\r\n        if(location.state) {\r\n            current.locationState = Object.assign({}, location.state);\r\n        }\r\n\r\n        this.current = current;\r\n        this.updateHistory(action);\r\n        return true;\r\n    }\r\n\r\n    // ------------------------------\r\n    // 更新目前state\r\n    // action : PUSH, REPLACE, or POP\r\n    // ------------------------------\r\n    updateCurrentByPath(path, action) {\r\n\r\n        if(!path) {\r\n            this.current = {\r\n                state: nullState,\r\n            };\r\n\r\n            this.updateHistory(action);\r\n            return false;\r\n        }\r\n\r\n        var searchIndex = path.indexOf('?');\r\n        var search = undefined;\r\n\r\n        if(searchIndex !== -1) {\r\n            search = path.substr(searchIndex);\r\n            path = path(0, searchIndex);\r\n        }\r\n\r\n        var current = this.getStateByPath(path);\r\n\r\n        if(!current) {\r\n            this.current = {\r\n                state: Object.assign({}, nullState, {\r\n                    path: path,\r\n                }),\r\n            };\r\n\r\n            this.updateHistory(action);\r\n            return false;\r\n        }\r\n\r\n        if(search) {\r\n            current.querys = parse(search.substr(1));\r\n        }\r\n\r\n        this.current = current;\r\n        this.updateHistory(action);\r\n        return true;\r\n    }\r\n\r\n    // ------------------------------\r\n    // 更新目前state\r\n    // action : PUSH, REPLACE, or POP\r\n    // ------------------------------\r\n    updateCurrentByState(statename, params, querys, path, action) {\r\n\r\n        var state = this.states[statename];\r\n\r\n        if(!state) {\r\n            this.current = {\r\n                state: Object.assign({}, nullState, {\r\n                    path: path,\r\n                }),\r\n            };\r\n\r\n            this.updateHistory(action);\r\n            return false;\r\n        }\r\n\r\n        this.current = {\r\n            state: state,\r\n            params: params,\r\n            querys: querys,\r\n        }\r\n\r\n        this.updateHistory(action);\r\n        return true;\r\n    }\r\n\r\n    // ------------------------------\r\n    // 更新瀏覽記錄\r\n    // 會依照action類型決定更新方法\r\n    // action : PUSH, REPLACE, or POP\r\n    // ------------------------------\r\n    updateHistory(action) {\r\n\r\n        if(this.history.length === 0) {\r\n            this.history.push(this.current);\r\n            return;\r\n        }\r\n\r\n        switch(action) {\r\n            case 'POP': // 上 n 頁\r\n                var last = this.history.pop(),\r\n                    isFind = false;\r\n\r\n                while(last) {\r\n                    isFind = this.isActive(last.state.name, last.params, last.querys);\r\n\r\n                    if(isFind) {\r\n                        break;\r\n                    }\r\n                    last = this.history.pop();\r\n                }\r\n\r\n                this.history.push(this.current);\r\n                break;\r\n            case 'REPLACE': // 原頁面替換\r\n                this.history[this.history.length - 1] = this.current;    \r\n                break;\r\n            case 'PUSH': // 進入新的一頁\r\n            default:\r\n                this.history.push(this.current);\r\n                break;\r\n        }\r\n    }\r\n\r\n    // ------------------------------\r\n    // 取得cache用的key\r\n    // ------------------------------\r\n    getCacheKey(statename, params, querys) {\r\n\r\n        return JSON.stringify({\r\n            statename: statename,\r\n            params: params,\r\n            querys: querys\r\n        });\r\n    }\r\n\r\n    // ------------------------------\r\n    // 取得state實際網址（含querys）\r\n    // ------------------------------\r\n    getUrl(statename, params, querys) {\r\n\r\n        const mapKey = this.getCacheKey(statename, params, querys);\r\n\r\n        if (cache.has(mapKey)) {\r\n            return cache.get(mapKey);\r\n        }\r\n\r\n        var url = this.getPathname(statename, params) + this.getQueryUrl(querys);\r\n        \r\n\r\n        return url;\r\n    }\r\n\r\n    // ------------------------------\r\n    // 取得state實際網址（無querys）\r\n    // ------------------------------\r\n    getPathname(statename, params) {\r\n\r\n        const mapKey = this.getCacheKey(statename, params);\r\n\r\n        if (cache.has(mapKey)) {\r\n            return cache.get(mapKey);\r\n        }\r\n\r\n        var url = \"\";\r\n        var state_url = \"\";\r\n        var newStateName = statename;\r\n        var grState = this.states[newStateName];\r\n        var dotIndex;\r\n\r\n        while(grState) {\r\n\r\n            state_url = grState.getUrl(params);\r\n            url = state_url.concat(url);\r\n\r\n            dotIndex = newStateName.lastIndexOf('.');\r\n\r\n            if(dotIndex > 0) {\r\n                newStateName = newStateName.substr(0, dotIndex);\r\n                grState = this.states[newStateName];\r\n            } else {\r\n                grState = undefined;\r\n            }\r\n        };\r\n\r\n        cache.set(mapKey, url);\r\n\r\n        return url;\r\n    }\r\n\r\n    // ------------------------------\r\n    // 取得query網址\r\n    // ------------------------------\r\n    getQueryUrl(querys) {\r\n\r\n        const url = querys && Object.keys(querys).reduce((acc, key, index) => {\r\n\r\n            const value = querys[key];\r\n        \r\n            let searchString = Array.isArray(value)\r\n                ? value.reduce((acc, item, index) => index === 0 ? `${key}=${item}` : `${acc}&${key}=${item}` , '')\r\n                : `${key}=${value}`;\r\n        \r\n        \r\n            return index === 0 ? `?${searchString}` : `${acc}&${searchString}`;\r\n        }, '');\r\n\r\n        return url || '';\r\n    }\r\n\r\n    // ------------------------------\r\n    // 傳入的statename是否為目前state的state或是子state\r\n    // ------------------------------\r\n    includes(statename) {\r\n\r\n        if(!this.current || this.isUnknowState()) {\r\n            return false;\r\n        }\r\n\r\n        return this.current.state.includes(statename);\r\n    }\r\n\r\n    // ------------------------------\r\n    // 是否有該state\r\n    // ------------------------------\r\n    hasState(statename) {\r\n\r\n        if(this.states[statename]) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    // ------------------------------\r\n    // 判斷是否在此頁\r\n    // ------------------------------\r\n    isActive(statename, params, querys) {\r\n\r\n        if(!this.current) {\r\n            return false;\r\n        }\r\n\r\n        if(this.current.state.name !== statename) {\r\n            return false;\r\n        }\r\n\r\n        if(params) {\r\n            var c_params = this.current.params;\r\n            var c_param;\r\n            var param;\r\n\r\n            for(var pkey in params) {\r\n                param = params[pkey];\r\n                c_param = c_params[pkey];\r\n\r\n                if(param !== c_param) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        if(querys) {\r\n            var c_querys = this.current.querys;\r\n            var c_query;\r\n            var query;\r\n\r\n            for(var qkey in querys) {\r\n                query = querys[qkey];\r\n                c_query = c_querys[qkey];\r\n\r\n                if(query !== c_query) {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    // ------------------------------\r\n    // 判斷目前是否為未定義的頁面\r\n    // ------------------------------\r\n    isUnknowState() {\r\n\r\n        if(!this.current) {\r\n            return false;\r\n        }\r\n\r\n        return this.current.state.name === nullState.name;\r\n    }\r\n\r\n    // ------------------------------\r\n    // 取得歷史記錄\r\n    // ------------------------------\r\n    getHistory() {\r\n\r\n        return this.history.slice(0); // slice 複製一份出去，避免修改到實際資料\r\n    }\r\n}\r\n\r\n/*--------------------------\r\n    export\r\n--------------------------*/\r\nexport default GRStateProvider;","/*=====================================\r\n    GR router 相關\r\n\r\n    Author: Gray\r\n    CreateTime: 2021 / 07 / 27\r\n=====================================*/\r\n\r\n/*--------------------------\r\n    Import\r\n--------------------------*/\r\nimport GRStateProvider from './GRStateProvider';\r\n\r\n/*--------------------------\r\n    Variables\r\n--------------------------*/\r\nconst STATES = {\r\n    HOME: 'home',\r\n    SELF: 'self',\r\n    WORK: 'work',\r\n    BUY: 'buy',\r\n    ADD: 'add',\r\n    EDIT: 'edit',\r\n};\r\n\r\nvar $stateProvider = new GRStateProvider();\r\n\r\n$stateProvider.otherwise('/todolist/');\r\n\r\n$stateProvider\r\n    .state(STATES.HOME, '/todolist/')\r\n    .state(STATES.SELF, '/todolist/self')\r\n    .state(STATES.WORK, '/todolist/work')\r\n    .state(STATES.BUY, '/todolist/buy')\r\n    .state(STATES.ADD, '/todolist/add')\r\n    .state(STATES.EDIT, '/todolist/edit/:id')\r\n;\r\n\r\nvar PATHS = {};\r\n\r\nfor(var key in STATES) {\r\n\r\n    var statename = STATES[key];\r\n\r\n    PATHS[key] = $stateProvider.absolutePathMap[statename];\r\n}\r\n\r\n/*--------------------------\r\n    Method\r\n--------------------------*/\r\n\r\n// ------------------------------\r\n// 取得 react router 所需要的陣列\r\n// ------------------------------\r\nfunction getReactRouterList() {\r\n\r\n    return $stateProvider.getReactRouterList();\r\n}\r\n\r\n// ------------------------------\r\n// 更新目前state\r\n// ------------------------------\r\nfunction updateCurrent(location, action) {\r\n\r\n    return $stateProvider.updateCurrent(location, action);\r\n}\r\n\r\n// ------------------------------\r\n// 更新目前state\r\n// ------------------------------\r\nfunction updateCurrentByPath(path, action) {\r\n\r\n    return $stateProvider.updateCurrentByPath(path, action);\r\n}\r\n\r\n// ------------------------------\r\n// 更新目前state\r\n// ------------------------------\r\nfunction updateCurrentByState(statename, params, querys, path, action) {\r\n\r\n    return $stateProvider.updateCurrentByState(statename, params, querys, path, action);\r\n}\r\n\r\n// ------------------------------\r\n// 取得目前state\r\n// ------------------------------\r\nfunction getCurrent() {\r\n\r\n    return $stateProvider.current;\r\n}\r\n\r\n// ------------------------------\r\n// 取得state實際網址（含querys）\r\n// ------------------------------\r\nfunction getUrl(statename, params, querys) {\r\n\r\n    return $stateProvider.getUrl(statename, params, querys);\r\n}\r\n\r\n// ------------------------------\r\n// 取得state實際網址（無querys）\r\n// ------------------------------\r\nfunction getPathname(statename, params) {\r\n\r\n    return $stateProvider.getPathname(statename, params);\r\n}\r\n\r\n// ------------------------------\r\n// 取得query網址\r\n// ------------------------------\r\nfunction getQueryUrl(querys) {\r\n\r\n    return $stateProvider.getQueryUrl(querys);\r\n}\r\n\r\n// ------------------------------\r\n// 傳入的statename是否為目前state的state或是子state\r\n// ------------------------------\r\nfunction includes(statename) {\r\n\r\n    return $stateProvider.includes(statename);\r\n}\r\n\r\n// ------------------------------\r\n// 是否有該state\r\n// ------------------------------\r\nfunction hasState(statename) {\r\n\r\n    return $stateProvider.hasState(statename);\r\n}\r\n\r\n// ------------------------------\r\n// 判斷是否在此頁\r\n// ------------------------------\r\nfunction isActive(statename, params, querys) {\r\n\r\n    return $stateProvider.isActive(statename, params, querys);\r\n}\r\n\r\n// ------------------------------\r\n// 判斷目前是否為未定義的頁面\r\n// ------------------------------\r\nfunction isUnknowState() {\r\n\r\n    return $stateProvider.isUnknowState();\r\n}\r\n\r\n// ------------------------------\r\n// 取得otherwise\r\n// ------------------------------\r\nfunction getOtherwise() {\r\n\r\n    return $stateProvider.otherwisePath;\r\n}\r\n\r\n// ------------------------------\r\n// 取得歷史記錄\r\n// ------------------------------\r\nfunction getHistory() {\r\n\r\n    return $stateProvider.getHistory();\r\n}\r\n\r\nconst GRRouter = {\r\n    /*--------------------------\r\n        Variables\r\n    --------------------------*/\r\n    STATES, // 所有state\r\n    PATHS, // State 對應到的 path\r\n\r\n    /*--------------------------\r\n        Method\r\n    --------------------------*/\r\n    getReactRouterList, // 取得 react router 所需要的陣列\r\n    updateCurrent, // 更新目前state\r\n    updateCurrentByPath, // 更新目前state\r\n    updateCurrentByState, // 更新目前state\r\n    getCurrent, // 取得目前state\r\n    getUrl, // 取得state實際網址（含querys）\r\n    getPathname, // 取得state實際網址（無querys）\r\n    getQueryUrl, // 取得query網址\r\n    includes, // 傳入的statename是否為目前state的state或是子state\r\n    hasState, // 是否有該state\r\n    isActive, // 判斷是否在此頁\r\n    isUnknowState, // 判斷目前是否為未定義的頁面\r\n    getOtherwise, // 取得otherwise\r\n    getHistory, // 取得歷史記錄\r\n};\r\n\r\nexport default GRRouter;\r\n","/*=====================================\r\n    web action\r\n\r\n    Author: Gray\r\n    CreateTime: 2021 / 07 / 27\r\n=====================================*/\r\n\r\n/*--------------------------\r\n    Import\r\n--------------------------*/\r\nimport { push, replace } from 'react-router-redux';\r\nimport GRRouter from '../../components/commons/router/GRRouter';\r\n\r\n/*--------------------------\r\n    Method\r\n--------------------------*/\r\n// ------------------------------\r\n// GR State 轉址\r\n// ------------------------------\r\nfunction grStateGo(statename, params, querys, locationState) {\r\n\r\n    return dispatch => {\r\n\r\n        if(!GRRouter.hasState(statename)) {\r\n            throw new Error('GRState has not state: ' + statename);\r\n        }\r\n\r\n        const url = GRRouter.getPathname(statename, params);\r\n        const search = GRRouter.getQueryUrl(querys);\r\n        const location =  {\r\n            pathname: url,\r\n            search: search,\r\n            state: locationState,\r\n        };\r\n\r\n        return dispatch(push(location));\r\n    };\r\n}\r\n\r\n// ------------------------------\r\n// GR State 轉址（不會記錄上下頁）\r\n// ------------------------------\r\nfunction grStateReplace(statename, params, querys, locationState) {\r\n\r\n    return dispatch => {\r\n\r\n        if(!GRRouter.hasState(statename)) {\r\n            throw new Error('GRState has not state: ' + statename);\r\n        }\r\n\r\n        const url = GRRouter.getPathname(statename, params);\r\n        const search = GRRouter.getQueryUrl(querys);\r\n        const location =  {\r\n            pathname: url,\r\n            search: search,\r\n            state: locationState,\r\n        };\r\n\r\n        return dispatch(replace(location));\r\n    };\r\n}\r\n\r\n// ------------------------------\r\n// GR State 轉至預設頁\r\n// ------------------------------\r\nfunction grStateGoOtherwise() {\r\n\r\n    return dispatch => {\r\n\r\n        const otherwise = GRRouter.getOtherwise();\r\n\r\n        if(otherwise) {\r\n            return dispatch(replace(otherwise));    \r\n        }\r\n    };\r\n}\r\n\r\nconst webActions = {\r\n    grStateGo, // GR State 轉址\r\n    grStateReplace, // GR State 轉址（不會記錄上下頁）\r\n    grStateGoOtherwise, // GR State 轉至預設頁\r\n};\r\n\r\nexport default webActions;","/*=====================================\r\n    todo action\r\n\r\n    Author: Gray\r\n    CreateTime: 2021 / 07 / 28\r\n=====================================*/\r\n\r\n/*--------------------------\r\n    Import\r\n--------------------------*/\r\nimport actionTypes from '../actionTypes';\r\nimport globalutil from '../../util/globalutil';\r\n\r\n/*--------------------------\r\n    Variable\r\n--------------------------*/\r\nconst {\r\n    TODO_STATE,\r\n} = globalutil;\r\n\r\nconst LOCAL_STORAGE_TODO_DATA_KEY = 'gr.todo_list_data_map';\r\nlet todoMap = {};\r\n\r\n/*--------------------------\r\n    Method\r\n--------------------------*/\r\n\r\n// ------------------------------\r\n// [private] 取得存在 localStorage 的 todo 資料\r\n// ------------------------------\r\nfunction getStorageTodoMap() {\r\n\r\n    let json = localStorage.getItem(LOCAL_STORAGE_TODO_DATA_KEY);\r\n    \r\n    todoMap = JSON.parse(json) || {};\r\n\r\n    return todoMap;\r\n}\r\n\r\n// ------------------------------\r\n// [private] 更新 localStorage 的 todo 資料\r\n// ------------------------------\r\nfunction updateStorageTodoMap(new_todoMap) {\r\n\r\n    let json = JSON.stringify(new_todoMap);\r\n\r\n    localStorage.setItem(LOCAL_STORAGE_TODO_DATA_KEY, json)\r\n}\r\n\r\n// ------------------------------\r\n// 取得todo資料\r\n// ------------------------------\r\nfunction getTodoData() {\r\n\r\n    return function (dispatch) {\r\n        const promise = new Promise((resolve, reject) => {\r\n            \r\n            dispatch(getTodoDataStart());\r\n            \r\n            setTimeout(() => {\r\n                const data = getStorageTodoMap();\r\n\r\n                if(data) {\r\n                    dispatch(getTodoDataSuccess(data));                                \r\n                    resolve(true);\r\n                } else {\r\n                    dispatch(getTodoDataError());                                \r\n                    reject(false);\r\n                }\r\n            }, 0);\r\n        });\r\n\r\n        return promise;\r\n    }\r\n}\r\n\r\n// ------------------------------\r\n// [private] 開始取得todo資料\r\n// ------------------------------\r\nfunction getTodoDataStart() {\r\n\r\n    return { type: actionTypes.getTodoDataStart }\r\n}\r\n\r\n// ------------------------------\r\n// [private] 成功取得todo資料\r\n// ------------------------------\r\nfunction getTodoDataSuccess(todoData) {\r\n\r\n    const payload = {\r\n        todoData: todoData,\r\n    };\r\n\r\n    return { type: actionTypes.getTodoDataSuccess, payload }\r\n}\r\n\r\n// ------------------------------\r\n// [private] 失敗取得todo資料\r\n// ------------------------------\r\nfunction getTodoDataError() {\r\n\r\n    return { type: actionTypes.getTodoDataError }\r\n}\r\n\r\n// ------------------------------\r\n// 新增 Todo\r\n// ------------------------------\r\nfunction addTodo(payload) {\r\n\r\n    const {\r\n        title,\r\n        time,\r\n        category,\r\n    } = payload;\r\n\r\n    return function (dispatch) {\r\n        const now = Date.now();\r\n        const id = now + '';\r\n        const todo = {\r\n            id: id,\r\n            title: title,\r\n            createtime: now,\r\n            todotime: time,\r\n            category: category,\r\n            remark: '',\r\n            state: TODO_STATE.IDLE,\r\n        };\r\n\r\n        todoMap[id] = todo;\r\n        updateStorageTodoMap(todoMap);\r\n\r\n        dispatch(addTodoSuccess(todo));\r\n\r\n        return todo;\r\n    }\r\n}\r\n\r\n// ------------------------------\r\n// [private] 成功新增todo資料\r\n// ------------------------------\r\nfunction addTodoSuccess(todo) {\r\n\r\n    const payload = {\r\n        todo: todo,\r\n    };\r\n\r\n    return { type: actionTypes.addTodoSuccess, payload }\r\n}\r\n\r\n// ------------------------------\r\n// 編輯 Todo\r\n// ------------------------------\r\nfunction editTodo(payload) {\r\n\r\n    const {\r\n        id,\r\n        title,\r\n        time,\r\n        category,\r\n    } = payload;\r\n\r\n    return function (dispatch) {\r\n        const old_todo = todoMap[id] || {};\r\n        const todo = Object.assign({}, old_todo, {\r\n            title: title,\r\n            todotime: time,\r\n            category: category,\r\n        })\r\n\r\n        todoMap[id] = todo;\r\n        updateStorageTodoMap(todoMap);\r\n\r\n        dispatch(editTodoSuccess(todo));\r\n\r\n        return todo;\r\n    }\r\n}\r\n\r\n// ------------------------------\r\n// [private] 成功編輯todo資料\r\n// ------------------------------\r\nfunction editTodoSuccess(todo) {\r\n\r\n    const payload = {\r\n        todo: todo,\r\n    };\r\n\r\n    return { type: actionTypes.editTodoSuccess, payload }\r\n}\r\n\r\n// ------------------------------\r\n// 完成 Todo\r\n// ------------------------------\r\nfunction finishTodo(payload) {\r\n\r\n    const {\r\n        id,\r\n    } = payload;\r\n\r\n    return function (dispatch) {\r\n        const old_todo = todoMap[id] || {};\r\n        const todo = Object.assign({}, old_todo, {\r\n            state: TODO_STATE.FINISH,\r\n        });\r\n\r\n        todoMap[id] = todo;\r\n        updateStorageTodoMap(todoMap);\r\n\r\n        dispatch(finishTodoSuccess(todo));\r\n\r\n        return todo;\r\n    }\r\n}\r\n\r\n// ------------------------------\r\n// [private] 成功完成 Todo\r\n// ------------------------------\r\nfunction finishTodoSuccess(todo) {\r\n\r\n    const payload = {\r\n        todo: todo,\r\n    };\r\n\r\n    return { type: actionTypes.finishTodoSuccess, payload }\r\n}\r\n\r\n// ------------------------------\r\n// 刪除 Todo\r\n// ------------------------------\r\nfunction deleteTodo(payload) {\r\n\r\n    const {\r\n        id,\r\n    } = payload;\r\n\r\n    return function (dispatch) {\r\n        const old_todo = todoMap[id] || {};\r\n        const todo = Object.assign({}, old_todo, {\r\n            state: TODO_STATE.DELETE,\r\n        });\r\n\r\n        todoMap[id] = todo;\r\n        updateStorageTodoMap(todoMap);\r\n\r\n        dispatch(deleteTodoSuccess(todo));\r\n\r\n        return todo;\r\n    }\r\n}\r\n\r\n// ------------------------------\r\n// [private] 成功刪除 Todo\r\n// ------------------------------\r\nfunction deleteTodoSuccess(todo) {\r\n\r\n    const payload = {\r\n        todo: todo,\r\n    };\r\n\r\n    return { type: actionTypes.deleteTodoSuccess, payload }\r\n}\r\n\r\n// ------------------------------\r\n// 復原 Todo\r\n// ------------------------------\r\nfunction resetTodo(payload) {\r\n\r\n    const {\r\n        id,\r\n    } = payload;\r\n\r\n    return function (dispatch) {\r\n        const old_todo = todoMap[id] || {};\r\n        const todo = Object.assign({}, old_todo, {\r\n            state: TODO_STATE.IDLE,\r\n        });\r\n\r\n        todoMap[id] = todo;\r\n        updateStorageTodoMap(todoMap);\r\n\r\n        dispatch(resetTodoSuccess(todo));\r\n\r\n        return todo;\r\n    }\r\n}\r\n\r\n// ------------------------------\r\n// [private] 成功復原 Todo\r\n// ------------------------------\r\nfunction resetTodoSuccess(todo) {\r\n\r\n    const payload = {\r\n        todo: todo,\r\n    };\r\n\r\n    return { type: actionTypes.resetTodoSuccess, payload }\r\n}\r\n\r\n/*--------------------------\r\n    Export\r\n--------------------------*/\r\nconst todoActions = {\r\n    getTodoData, // 取得todo資料\r\n    addTodo, // 新增 Todo\r\n    editTodo, // 編輯 Todo \r\n    finishTodo, // 完成 Todo \r\n    deleteTodo, // 刪除 Todo\r\n    resetTodo, // 復原 Todo\r\n};\r\n\r\nexport default todoActions;","import webActionCreators from './webActions';\r\nimport todoActionCreators from './todoActions';\r\n\r\nconst actionCreators = {\r\n    webActionCreators,\r\n    todoActionCreators,\r\n};\r\n\r\nexport default actionCreators;","\r\nconst Main = '#5bb9b9';\r\nconst Dark = '#565151';\r\nconst Dark2 = '#6C6666';\r\nconst Dark3 = '#8A807F';\r\nconst Dark4 = '#A79E9D';\r\nconst Dark5 = '#C6BDBC';\r\nconst Dark6 = '#E2DFDE';\r\nconst Dark7 = '#F0EFEE';\r\nconst Dark8 = '#FDF3F3';\r\n\r\nconst LightBlue = '#E1ECFD';\r\n\r\nconst AllColor =  '#d98597';\r\nconst SelfColor =  '#7acbff';\r\nconst WorkColor =  '#df9c01';\r\nconst BuyColor =  '#9680f0';\r\n\r\nconst Red = '#e04131';\r\n\r\n// 轉換公式\r\nfunction hex(x) {\r\n\treturn (\"0\" + parseInt(x, 10).toString(16)).slice(-2);\r\n}\r\n\r\n// 1 ~ 100 變亮\r\n// -1 ~ -100 變暗\r\nfunction LightenDarkenColor(col, amt) {\r\n  \r\n    var usePound = false;\r\n  \r\n    if (col[0] === \"#\") {\r\n        col = col.slice(1);\r\n        usePound = true;\r\n    }\r\n \r\n    var num = parseInt(col,16);\r\n \r\n    var r = (num >> 16) + amt;\r\n \r\n    if (r > 255) r = 255;\r\n    else if  (r < 0) r = 0;\r\n \r\n    var b = ((num >> 8) & 0x00FF) + amt;\r\n \r\n    if (b > 255) b = 255;\r\n    else if  (b < 0) b = 0;\r\n \r\n    var g = (num & 0x0000FF) + amt;\r\n \r\n    if (g > 255) g = 255;\r\n    else if (g < 0) g = 0;\r\n\r\n    const _hex = (g | (b << 8) | (r << 16)).toString(16);\r\n    if(_hex.length !== 6) {\r\n    \treturn (usePound?\"#\":\"\") + (hex(r) + hex(g) + hex(b));\r\n    } else {\r\n    \treturn (usePound?\"#\":\"\") + _hex;\r\n    }\r\n}\r\n\r\nfunction RGBA(hex, opacity) {\r\n\r\n\t// http://stackoverflow.com/a/5624139\r\n  \tvar shorthandRegex = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\r\n  \thex = hex.replace(shorthandRegex, function (m, r, g, b) {\r\n    \treturn r + r + g + g + b + b;\r\n  \t});\r\n\r\n  \tvar result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  \tresult = result ? 'rgba(' + parseInt(result[1], 16) + ',' + parseInt(result[2], 16) + ',' + parseInt(result[3], 16) + ',' + opacity + ')' : null;\r\n  \treturn result;\r\n  \t\r\n}\r\n\r\n\r\nconst Colors = {\r\n\tMain,\r\n\tDark,\r\n\tDark2,\r\n\tDark3,\r\n\tDark4,\r\n\tDark5,\r\n\tDark6,\r\n\tDark7,\r\n\tDark8,\r\n\tLightBlue,\r\n\tAllColor,\r\n\tSelfColor,\r\n\tWorkColor,\r\n\tBuyColor,\r\n\tRed,\r\n\tLightenDarkenColor,\r\n\tRGBA,\r\n}\r\n\r\nexport default Colors;","/*=====================================\r\n\tglobal style\r\n\r\n\tAuthor: Gray\r\n\tCreateTime: 2021 / 07 / 27\r\n=====================================*/\r\n\r\nimport styled, { css, keyframes } from 'styled-components';\r\nimport Colors from './colors';\r\n\r\n/*--------------------------\r\n    Style Variables\r\n--------------------------*/\r\nconst ContainerMaxWidth = 600;\r\nconst TopbarHeight = 60;\r\nconst TopbarZindex = 950;\r\n\r\n/*--------------------------\r\n    Style Keyframes\r\n--------------------------*/\r\nconst rotate360 = keyframes`\r\n\tfrom {\r\n\t\ttransform: rotate(0deg);\r\n\t}\r\n\r\n\tto {\r\n\t\ttransform: rotate(360deg);\r\n\t}\r\n`;\r\n\r\n/*--------------------------\r\n    CSS\r\n--------------------------*/\r\nconst imageBackgroundCSS = css`\r\n\tbackground-color: ${Colors.ImgBackground};\r\n    background-repeat: no-repeat;\r\n    background-position: center;\r\n    background-size: cover;\r\n`;\r\n\r\n/*--------------------------\r\n    Style Component\r\n--------------------------*/\r\nconst RootContainer = styled.div`\r\n\tposition: relative;\r\n\tmargin: 0 auto;\r\n\tpadding: 0;\r\n\twidth: 100%;\r\n\tmax-width: ${ContainerMaxWidth}px;\r\n\tmin-height: 100vh;\r\n\theight: 100%;\r\n`;\r\nconst ViewContainer = styled.div`\r\n\tposition: relative;\r\n\tpadding: ${TopbarHeight}px 0 0 0px;\r\n`;\r\nconst Topbar = styled.div`\r\n    position: fixed;\r\n    display: flex;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: ${TopbarHeight}px;\r\n    background-color: ${Colors.Main};\r\n    z-index: ${TopbarZindex};\r\n    align-items: center;\r\n`;\r\nconst TopbarMenuBtn = styled.div`\r\n    display: inline-flex;\r\n    width: ${TopbarHeight}px;\r\n    height: ${TopbarHeight}px;\r\n    color: #fff;\r\n    font-size: 22px;\r\n    cursor: pointer;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\nconst TopbarMenuTitle = styled.div`\r\n    color: #fff;\r\n    font-size: 16px;\r\n`;\r\nconst TopbarActionTitle = styled.div`\r\n    display: block;\r\n\twidth: 100%;\r\n\tpadding: 0 60px;\r\n\tcolor: #fff;\r\n    font-size: 16px;\r\n    text-align: center;\r\n`;\r\nconst TopbarActionBtn = styled.div`\r\n\tposition: absolute;\r\n\tdisplay: inline-flex;\r\n\ttop: 0;\r\n    height: ${TopbarHeight}px;\r\n\tpadding: 0 16px;\r\n\tcolor: #fff;\r\n\tfont-size: 14px;\r\n    cursor: pointer;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n\ti {\r\n\t\tfont-size: 20px;\r\n\t}\r\n`;\r\nconst TopbarActionLeftBtn = styled(TopbarActionBtn)`\r\n\tleft: 0;\r\n`;\r\nconst TopbarActionRightBtn = styled(TopbarActionBtn)`\r\n\tright: 0;\r\n`;\r\nconst Spin = styled.div`\r\n\tposition: relative;\r\n\tvertical-align: sub;\r\n\tdisplay: ${props => props.display ? props.display : 'inline-block'};\r\n\twidth: ${props => props.size ? props.size : '20px'};\r\n\theight: ${props => props.size ? props.size : '20px'};\r\n\tmargin: ${props => props.margin ? props.margin : '0 auto'};\r\n\tborder-width: ${props => props.borderWidth ? props.borderWidth : '2px'};\r\n\tborder-style: solid;\r\n\tborder-top-color: ${props => props.bgColor ? props.bgColor : 'transparent'};\r\n\tborder-left-color: ${props => props.bgColor ? props.bgColor : 'transparent'};\r\n\tborder-right-color: ${props => props.color ? props.color : Colors.Main};\r\n\tborder-bottom-color: ${props => props.color ? props.color : Colors.Main};\r\n\tborder-radius: 100%;\r\n\tanimation: ${rotate360} 0.6s linear infinite;\r\n`;\r\nconst LoadingContainer = styled.div`\r\n\tposition: relative;\r\n\tdisplay: flex;\r\n\twidth: 100%;\r\n\theight: ${props => props.height ? props.height : '112px'};\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\nconst LoadingSpinCenter = styled.div`\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translateX(-50%) translateY(-50%);\r\n`;\r\nconst StatusContainer = styled.div`\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\tpadding: ${({ contentPadding }) => contentPadding ? contentPadding : '10px'};\r\n\tdisplay: flex;\r\n\tflex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    text-align: center;\r\n\tbackground-color: ${({ BGColor }) => BGColor || 'transparent'};\r\n`;\r\nconst StateContainer = styled.div`\r\n\tdisplay: flex;\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\theight: 300px;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n`;\r\nconst StateContent = styled.div`\r\n\ttext-align: center;\r\n\tmax-width: 480px;\r\n`;\r\nconst StateTtile = styled.h3`\r\n\tfont-size: 18px;\r\n\tmargin: 0;\r\n\tcolor: ${Colors.Title};\r\n`;\r\nconst StateDescription = styled.p`\r\n\tfont-size: 16px;\r\n\tmargin: 20px 0 0;\r\n\tcolor: ${Colors.Paragraph};\r\n\ta {\r\n\t\tdisplay: inline-flex;\r\n\t\tmargin: 0;\r\n\t\tpadding: 0;\r\n\t\ttext-decoration: underline;\r\n\t\tcolor: #333;\r\n\t\tfont-weight: 600;\r\n\t}\r\n`;\r\nconst StateAction = styled.div`\r\n`;\r\n\r\nconst GlobalStyle = {\r\n\t/*--------------------------\r\n\t\tVariables\r\n\t--------------------------*/\r\n\tContainerMaxWidth,\r\n\tTopbarHeight,\r\n\tTopbarZindex,\r\n\r\n\t/*--------------------------\r\n\t\tCSS\r\n\t--------------------------*/\r\n\timageBackgroundCSS,\r\n\r\n\t/*--------------------------\r\n\t\tComponent\r\n\t--------------------------*/\r\n\tRootContainer,\r\n\tViewContainer,\r\n\tTopbar,\r\n\tTopbarMenuBtn,\r\n\tTopbarMenuTitle,\r\n\tTopbarActionTitle,\r\n\tTopbarActionLeftBtn,\r\n\tTopbarActionRightBtn,\r\n\tSpin,\r\n\tLoadingContainer,\r\n\tLoadingSpinCenter,\r\n\tStatusContainer,\r\n\t\r\n\t/*--------------------------\r\n\t\tState\r\n\t--------------------------*/\r\n\tStateContainer,\r\n\tStateContent,\r\n\tStateTtile,\r\n\tStateDescription,\r\n\tStateAction,\r\n}\r\n\r\nexport default GlobalStyle;","/*=====================================\r\n    GR Router View\r\n\r\n    Author: Gray\r\n    createtime: 2021 / 07 / 27\r\n=====================================*/\r\n\r\n/*--------------------------\r\n    Import\r\n--------------------------*/\r\nimport React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport GRRouter from \"./GRRouter\";\r\nimport actionCreators from \"../../../actions/creators\";\r\n\r\n/*--------------------------\r\n    Main Component\r\n--------------------------*/\r\nclass GRRouterView extends PureComponent {\r\n\r\n    // ------------------------------\r\n    // componentWillMount\r\n    // ------------------------------\r\n    componentWillMount() {\r\n\r\n        const {\r\n            history,\r\n        } = this.props\r\n\r\n        const {\r\n            location,\r\n            action,\r\n        } = history;\r\n\r\n        GRRouter.updateCurrent(location, action);\r\n\r\n        if(GRRouter.isUnknowState()) {\r\n            this.props.webActions.grStateGoOtherwise();\r\n        }\r\n\r\n        // 不是Route物件內的components不會感覺到history的變動，所以必須監聽事件，\r\n        // 但是listen事件沒有辦法移除，所以會變成會一直 componentDidMount 跟 componentWillUnmount 的 components 不能執行這個動作\r\n        history.listen((new_location, new_action) => {\r\n            GRRouter.updateCurrent(new_location, new_action);\r\n\r\n            if(GRRouter.isUnknowState()) {\r\n                this.props.webActions.grStateGoOtherwise();\r\n            }\r\n        });\r\n    }\r\n\r\n    // ------------------------------\r\n    // render\r\n    // ------------------------------\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.props.children}\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\n/*--------------------------\r\n    Reducer Props\r\n--------------------------*/\r\nconst mapStateToProps = function(state) {\r\n    return {\r\n        history: state.web.history,\r\n    };\r\n};\r\n\r\n/*--------------------------\r\n    Reducer Action\r\n--------------------------*/\r\nconst mapActionToProps = function(dispatch) {\r\n    return {\r\n        webActions: bindActionCreators(actionCreators.webActionCreators, dispatch),\r\n    };\r\n};\r\n\r\n/*--------------------------\r\n    export\r\n--------------------------*/\r\nexport default connect(mapStateToProps, mapActionToProps, null, {\r\n    forwardRef: true\r\n})(GRRouterView);","/*=====================================\r\n    Topbar\r\n\r\n    Author: Gray\r\n    CreateTime: 2021 / 07 / 27\r\n=====================================*/\r\n\r\n/*--------------------------\r\n    Import\r\n--------------------------*/\r\nimport React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport actionCreators from '../actions/creators';\r\nimport { GlobalStyle, Colors } from '../stylecomponents';\r\nimport GRRouter from './commons/router/GRRouter';\r\nimport globalutil from '../util/globalutil';\r\n\r\n/*--------------------------\r\n    Variable\r\n--------------------------*/\r\nconst {\r\n    STATES,\r\n} = GRRouter;\r\n\r\nconst {\r\n    TODO_CATEGORY_TYPE,\r\n    getTodoCategoryTypeText,\r\n} = globalutil;\r\n\r\n/*--------------------------\r\n    Styled\r\n--------------------------*/\r\nconst Overlay = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: ${props => props.show ? 1 : 0};\r\n    background-color: rgba(0,0,0,0.4);\r\n    transition: opacity 0.3s;\r\n    z-index: ${GlobalStyle.TopbarZindex + 1};\r\n    user-select: none;\r\n    pointer-events: none;\r\n`;\r\nconst Sidebar = styled.div`\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: ${GlobalStyle.TopbarZindex + 2};\r\n    transform: ${props => props.show ? 'none' : 'translateX(-100%)'};\r\n    transition: transform 0.3s;\r\n`;\r\nconst SidebarContent = styled.div`\r\n    position: relative;\r\n    width: 240px;\r\n    max-width: 70%;\r\n    height: 100%;\r\n    background-color: #fff;\r\n    z-index: 2;\r\n`;\r\nconst SidebarOverlay = styled.div`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    z-index: 1;\r\n`;\r\nconst SidebarHead = styled.div`\r\n    display: flex;\r\n    height: 120px;\r\n    background-color: ${Colors.Main};\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\nconst SidebarHeadText = styled.div`\r\n    line-height: 1.3;\r\n    color: #fff;\r\n    font-size: 20px;\r\n    text-align: center;\r\n`;\r\nconst NavItem = styled.div`\r\n    display: flex;\r\n    height: 40px;\r\n    margin: 1px 0 0 0;\r\n    border-left-width: 3px;\r\n    border-left-style: solid;\r\n    background-color: ${props => props.active ? '#eee' : '#fff'};\r\n    color: ${Colors.Dark2};\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    align-items: center;\r\n`;\r\nconst NavItemAll = styled(NavItem)`\r\n    border-left-color: ${Colors.AllColor}; \r\n`;\r\nconst NavItemSelf = styled(NavItem)`\r\n    border-left-color: ${Colors.SelfColor};\r\n`;\r\nconst NavItemWork = styled(NavItem)`\r\n    border-left-color: ${Colors.WorkColor};\r\n`;\r\nconst NavItemBuy = styled(NavItem)`\r\n    border-left-color: ${Colors.BuyColor};\r\n`;\r\nconst NavItemIcon = styled.div`\r\n    display: flex;\r\n    width: 40px;\r\n    height: 40px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 16px;\r\n`;\r\n\r\n/*--------------------------\r\n    Main Component\r\n--------------------------*/\r\nclass TopbarView extends PureComponent {\r\n\r\n    // ------------------------------\r\n    // constructor\r\n    // ------------------------------\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            isShowMenu: false,\r\n        };\r\n\r\n        this.openMenu = this.openMenu.bind(this);\r\n        this.closeMenu = this.closeMenu.bind(this);\r\n        this.onNavClick = this.onNavClick.bind(this);\r\n    }\r\n\r\n    // ------------------------------\r\n    // openMenu\r\n    // ------------------------------\r\n    openMenu() {\r\n\r\n        this.setState({\r\n            isShowMenu: true,\r\n        });\r\n    }\r\n\r\n    // ------------------------------\r\n    // closeMenu\r\n    // ------------------------------\r\n    closeMenu() {\r\n\r\n        this.setState({\r\n            isShowMenu: false,\r\n        });\r\n    }\r\n\r\n    // ------------------------------\r\n    // onNavClick\r\n    // ------------------------------\r\n    onNavClick(statename) {\r\n\r\n        this.props.webActions.grStateGo(statename);\r\n        this.closeMenu();\r\n    }\r\n\r\n    // ------------------------------\r\n    // renderMenuTopbar\r\n    // ------------------------------\r\n    renderMenuTopbar() {\r\n\r\n        const {\r\n            isShowMenu,\r\n        } = this.state\r\n\r\n        const {\r\n            title,\r\n        } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <GlobalStyle.Topbar>\r\n                    <GlobalStyle.TopbarMenuBtn onClick={this.openMenu}>\r\n                        <i className=\"zmdi zmdi-menu\"></i>\r\n                    </GlobalStyle.TopbarMenuBtn>\r\n                    <GlobalStyle.TopbarMenuTitle>{title}</GlobalStyle.TopbarMenuTitle>\r\n                </GlobalStyle.Topbar>\r\n                <Overlay show={isShowMenu}></Overlay>\r\n                <Sidebar show={isShowMenu}>\r\n                    <SidebarOverlay onClick={this.closeMenu}></SidebarOverlay>\r\n                    <SidebarContent>\r\n                        <SidebarHead>\r\n                            <SidebarHeadText>\r\n                                ToDo<br/>List\r\n                            </SidebarHeadText>\r\n                        </SidebarHead>\r\n                        <NavItemAll\r\n                            onClick={() => this.onNavClick(STATES.HOME)}\r\n                            active={GRRouter.isActive(STATES.HOME)}\r\n                        >\r\n                            <NavItemIcon>\r\n                                <i className=\"zmdi zmdi-apps\"></i>\r\n                            </NavItemIcon>\r\n                            {getTodoCategoryTypeText(TODO_CATEGORY_TYPE.ALL)}\r\n                        </NavItemAll>\r\n                        <NavItemSelf\r\n                            onClick={() => this.onNavClick(STATES.SELF)}\r\n                            active={GRRouter.isActive(STATES.SELF)}\r\n                        >\r\n                            <NavItemIcon>\r\n                                <i className=\"zmdi zmdi-account\"></i>\r\n                            </NavItemIcon>\r\n                            {getTodoCategoryTypeText(TODO_CATEGORY_TYPE.SELF)}\r\n                        </NavItemSelf>\r\n                        <NavItemWork\r\n                            onClick={() => this.onNavClick(STATES.WORK)}\r\n                            active={GRRouter.isActive(STATES.WORK)}\r\n                        >\r\n                            <NavItemIcon>\r\n                                <i className=\"zmdi zmdi-case\"></i>\r\n                            </NavItemIcon>\r\n                            {getTodoCategoryTypeText(TODO_CATEGORY_TYPE.WORK)}\r\n                        </NavItemWork>\r\n                        <NavItemBuy\r\n                            onClick={() => this.onNavClick(STATES.BUY)}\r\n                            active={GRRouter.isActive(STATES.BUY)}\r\n                        >\r\n                            <NavItemIcon>\r\n                                <i className=\"zmdi zmdi-shopping-cart\"></i>\r\n                            </NavItemIcon>\r\n                            {getTodoCategoryTypeText(TODO_CATEGORY_TYPE.BUY)}\r\n                        </NavItemBuy>\r\n                    </SidebarContent>\r\n                </Sidebar>\r\n                    \r\n            </>\r\n        );\r\n    }\r\n\r\n    // ------------------------------\r\n    // renderActionTopbar\r\n    // ------------------------------\r\n    renderActionTopbar() {\r\n\r\n        const {\r\n            title,\r\n            leftComponent,\r\n            rightComponent,\r\n        } = this.props;\r\n\r\n        return (\r\n            <GlobalStyle.Topbar>\r\n                {leftComponent}\r\n                <GlobalStyle.TopbarActionTitle>{title}</GlobalStyle.TopbarActionTitle>\r\n                {rightComponent}\r\n            </GlobalStyle.Topbar>\r\n        );\r\n    }\r\n\r\n    // ------------------------------\r\n    // render\r\n    // ------------------------------\r\n    render() {\r\n\r\n        const {\r\n            layoutType,\r\n        } = this.props;\r\n\r\n        switch(layoutType) {\r\n            case 'menu':\r\n                return this.renderMenuTopbar();\r\n            case 'action':\r\n                return this.renderActionTopbar();\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n}\r\n\r\n/*--------------------------\r\n    Props\r\n--------------------------*/\r\nTopbarView.propTypes = {\r\n    title: PropTypes.string,\r\n    layoutType: PropTypes.oneOf(['menu', 'action']),\r\n    leftComponent: PropTypes.node,\r\n    rightComponent: PropTypes.node,\r\n}; \r\n\r\nTopbarView.defaultProps = {\r\n    title: 'ToDo',\r\n    layoutType: 'menu',\r\n    leftComponent: null,\r\n    rightComponent: null,\r\n};\r\n\r\n/*--------------------------\r\n    Redux Props\r\n--------------------------*/\r\nconst mapStateToProps = function(state) {\r\n    return {\r\n        history: state.web.history,\r\n    };\r\n};\r\n\r\n/*--------------------------\r\n    Redux Action\r\n--------------------------*/\r\nconst mapActionToProps = function(dispatch) {\r\n    return {\r\n        webActions: bindActionCreators(actionCreators.webActionCreators, dispatch),\r\n    };\r\n};\r\n\r\n/*--------------------------\r\n    Export\r\n--------------------------*/\r\nexport default connect(mapStateToProps, mapActionToProps, null, {\r\n    forwardRef: true\r\n})(TopbarView);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport dayjs from 'dayjs';\r\nimport 'dayjs/locale/zh-tw';\r\n\r\n// set dayjs locale\r\ndayjs.locale('zh-tw');\r\n\r\n/**\r\n * Variables\r\n */\r\nexport const FORMAT_TYPE = {\r\n  TIME_AGO: 'timeAgo',\r\n  SIMPLE_TIME_AGO: 'simpleTimeAgo',\r\n  SIMPLE_FULL_TIME: 'simpleFullTime',\r\n  FORMAT_MEDIA_PLAY_TIME: 'formatMediaPlayTime',\r\n  TIME_STRING: 'timeString',\r\n  TIME_DASH_STRING: 'timeDashString',\r\n  FULLTIME_DASH_STRING: 'fulltimeDashString',\r\n  TIME_SLASH_STRING: 'timeSlashString',\r\n  TIME_CHINESE_STRING: 'timeChineseString',\r\n  SIMPLE_MEDIA_PLAY_TIME: 'simpleMediaPlayTime',\r\n};\r\n\r\nexport const ForamtMethod = {\r\n  formatLongToDatetimeLocal: (time) => {\r\n    return dayjs(time).format('YYYY-MM-DDTHH:mm');\r\n  } \r\n}\r\n\r\n/**\r\n * Main Component\r\n */\r\nconst TimeFormat = props => {\r\n\r\n  const formatTime = () => {\r\n    const time = props.time;\r\n    const aDay = 86400000;\r\n    const date = new Date(time);\r\n    const now = new Date();\r\n\r\n    switch (props.format) {\r\n      case FORMAT_TYPE.TIME_AGO: {\r\n        if (date.getFullYear() === now.getFullYear()) {\r\n          if (now.getTime() - date.getTime() >= aDay) {\r\n            return dayjs(time).format('L');\r\n          } else {\r\n            return dayjs(time).fromNow();\r\n          }\r\n        } else {\r\n          return dayjs(time).format('LL');\r\n        }\r\n      }\r\n      case FORMAT_TYPE.SIMPLE_TIME_AGO: {\r\n        if(date.getFullYear() === now.getFullYear()){\r\n            if (now.getTime() - date.getTime() >= aDay) {\r\n                return dayjs(time).format('YYYY-MM-DD');\r\n            } else{\r\n                return dayjs(time).fromNow();\r\n            }\r\n        } else{\r\n            return dayjs(time).format('YYYY-MM-DD');\r\n        }\r\n      }\r\n      case FORMAT_TYPE.SIMPLE_FULL_TIME: {\r\n        return dayjs(time).format('YYYY/MM/DD HH:mm');\r\n      }\r\n      case FORMAT_TYPE.FORMAT_MEDIA_PLAY_TIME: {\r\n\r\n        if (!isNaN(time) && time > 0) {\r\n          var minutes = Math.floor(time / 60);\r\n          var seconds = Math.round(time % 60);\r\n          var hours = Math.floor(time / 3600);\r\n\r\n          if(hours < 1) {\r\n            minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n            seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n            return minutes + \":\" + seconds;\r\n          } else {\r\n            minutes = Math.round(minutes % 60);\r\n            minutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n            seconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n            return hours + \":\" + minutes + \":\" + seconds;\r\n          }\r\n          \r\n        }\r\n\r\n        return \"--:--\";\r\n      }\r\n      case FORMAT_TYPE.TIME_STRING: {\r\n        return dayjs(time).format('YYYY.MM.DD');\r\n      }\r\n      case FORMAT_TYPE.TIME_DASH_STRING: {\r\n        return dayjs(time).format('YYYY-MM-DD');\r\n      }\r\n      case FORMAT_TYPE.FULLTIME_DASH_STRING: {\r\n        return dayjs(time).format('YYYY-MM-DD HH:mm');\r\n      }\r\n      case FORMAT_TYPE.TIME_SLASH_STRING: {\r\n        return dayjs(time).format('YYYY / MM / DD');\r\n      }\r\n      case FORMAT_TYPE.TIME_CHINESE_STRING: {\r\n        return dayjs(time).format('YYYY年MM月DD日');\r\n      }\r\n      case FORMAT_TYPE.SIMPLE_MEDIA_PLAY_TIME: {\r\n        if (!isNaN(time) && time > 0) {\r\n          var isHour = time / 3600 > 0;\r\n          \r\n          if(isHour) {\r\n            return ' ' + Math.floor(time / 3600 * 10) / 10 + ' hr';\r\n          } else {\r\n            return ' ' + Math.floor(time / 60 * 10) / 10 + ' min';\r\n          }\r\n        }\r\n        return 0;\r\n      }\r\n      default: \r\n        return '';\r\n    }\r\n  };\r\n\r\n  const formatted = formatTime();\r\n    \r\n  return <span>{formatted}</span>;\r\n};\r\n\r\nTimeFormat.propTypes = {\r\n  time: PropTypes.number.isRequired,\r\n  format: PropTypes.oneOf([\r\n    FORMAT_TYPE.TIME_AGO,\r\n    FORMAT_TYPE.SIMPLE_TIME_AGO,\r\n    FORMAT_TYPE.SIMPLE_FULL_TIME,\r\n    FORMAT_TYPE.FORMAT_MEDIA_PLAY_TIME,\r\n    FORMAT_TYPE.TIME_STRING,\r\n    FORMAT_TYPE.TIME_DASH_STRING,\r\n    FORMAT_TYPE.FULLTIME_DASH_STRING,\r\n    FORMAT_TYPE.TIME_SLASH_STRING,\r\n    FORMAT_TYPE.TIME_CHINESE_STRING,\r\n    FORMAT_TYPE.SIMPLE_MEDIA_PLAY_TIME,\r\n  ]).isRequired,\r\n};\r\n\r\nTimeFormat.defaultProps = {\r\n  format: FORMAT_TYPE.FORMAT_TYPE,\r\n};\r\n\r\nexport default React.memo(TimeFormat);","/*=====================================\r\n    AddTodoView\r\n\r\n    Author: Gray\r\n    CreateTime: 2021 / 07 / 27\r\n=====================================*/\r\n\r\n/*--------------------------\r\n    Import\r\n--------------------------*/\r\nimport React, { PureComponent } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport AutoSizeTextarea from 'react-textarea-autosize';\r\nimport actionCreators from '../actions/creators';\r\nimport GRRouter from './commons/router/GRRouter';\r\nimport { GlobalStyle, Colors } from '../stylecomponents';\r\nimport TopbarView from './TopbarView';\r\nimport TimeFormat, { FORMAT_TYPE } from \"./commons/TimeFormat\";\r\nimport globalutil from '../util/globalutil';\r\nimport {\r\n    isBrowser,\r\n    isMobile,\r\n} from \"react-device-detect\";\r\n\r\n/*--------------------------\r\n    Variable\r\n--------------------------*/\r\nconst {\r\n    STATES,\r\n} = GRRouter;\r\n\r\nconst {\r\n    TODO_CATEGORY_TYPE,\r\n    getTodoCategoryTypeText,\r\n} = globalutil;\r\n\r\n/*--------------------------\r\n    Styled\r\n--------------------------*/\r\nconst TitleTextarea = styled(AutoSizeTextarea)`\r\n    padding: 20px 12px;\r\n    width: 100%;\r\n    min-height: 160px;\r\n    line-height: 20px;\r\n    border: 0;\r\n    color: ${Colors.Dark};\r\n    font-size: 15px;\r\n    resize: none;\r\n`;\r\nconst OptionRow = styled.label`\r\n    position: relative;\r\n    display: flex;\r\n    height: 50px;\r\n    padding: 0;\r\n    border-top: 1px solid #eee;\r\n    align-items: center;\r\n    color: ${Colors.Dark3};\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n\r\n    &:last-child {\r\n        border-bottom: 1px solid #eee;\r\n    }\r\n`;\r\nconst OptionRowIcon = styled.div`\r\n    display: inline-flex;\r\n    width: 50px;\r\n    height: 50px;\r\n    color: ${Colors.Dark3};\r\n    font-size: 16px;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\nconst OptionRowResult = styled.div`\r\n    display: inline-block;\r\n    margin: 0 16px 0 auto;\r\n    padding: 4px 10px;\r\n    border-radius: 8px;\r\n    color: ${Colors.Dark2};\r\n    font-size: 12px;\r\n    background-color: ${Colors.LightBlue};\r\n`;\r\nconst OptionRowHideSelect = styled.select`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: 0;\r\n    z-index: 2;\r\n    cursor: pointer;\r\n`;\r\nconst OptionRowDateInput = styled.input`\r\n    display: inline-block;\r\n    margin: 0 16px 0 auto;\r\n    padding: 4px 10px;\r\n    border: none;\r\n    border-radius: 8px;\r\n    color: ${Colors.Dark2};\r\n    font-size: 12px;\r\n    background-color: ${Colors.LightBlue};\r\n`;\r\nconst OptionRowHideDateInput = styled.input`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 0;\r\n    height: 0;\r\n    opacity: 0;\r\n`;\r\n\r\n/*--------------------------\r\n    Main Component\r\n--------------------------*/\r\nclass AddTodoView extends PureComponent {\r\n\r\n    // ------------------------------\r\n    // constructor\r\n    // ------------------------------\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: '',\r\n            category: TODO_CATEGORY_TYPE.ALL,\r\n            dateStr: '',\r\n            time: 0,\r\n        };\r\n\r\n        this.goBack = this.goBack.bind(this);\r\n        this.onTitleChange = this.onTitleChange.bind(this);\r\n        this.onCategoryChange = this.onCategoryChange.bind(this);\r\n        this.onTimeChange = this.onTimeChange.bind(this);\r\n        this.sumbit = this.sumbit.bind(this);\r\n    }\r\n\r\n    // ------------------------------\r\n    // goBack\r\n    // ------------------------------\r\n    goBack() {\r\n\r\n        const history = GRRouter.getHistory();\r\n\r\n        if(!Array.isArray(history) || history.length <= 1) {\r\n            this.props.webActions.grStateGo(STATES.HOME);\r\n            return;\r\n        }\r\n\r\n        const size = history.length;\r\n\r\n        let prevState = undefined;\r\n\r\n        for(var i = size - 1; i--; i >= 0) {\r\n            prevState = history[i];\r\n\r\n            if(prevState && prevState.state.name !== STATES.ADD) {\r\n                break;\r\n            }\r\n        }\r\n        \r\n        if(prevState) {\r\n            this.props.webActions.grStateGo(prevState.state.name);\r\n            return;\r\n        }\r\n        \r\n        this.props.webActions.grStateGo(STATES.HOME);\r\n    }\r\n\r\n    // ------------------------------\r\n    // onTitleChange\r\n    // ------------------------------\r\n    onTitleChange(event) {\r\n\r\n        this.setState({\r\n            title: event.target.value,\r\n        });\r\n    }\r\n\r\n    // ------------------------------\r\n    // onCategoryChange\r\n    // ------------------------------\r\n    onCategoryChange(event) {\r\n\r\n        this.setState({\r\n            category: event.target.value,\r\n        });\r\n    }\r\n\r\n    // ------------------------------\r\n    // onTimeChange\r\n    // ------------------------------\r\n    onTimeChange(event) {\r\n\r\n        const dateStr = event.target.value;\r\n        const date = new Date(dateStr);\r\n        const time = date.getTime();\r\n\r\n        this.setState({\r\n            dateStr: dateStr,\r\n            time: time,\r\n        });\r\n    }\r\n\r\n    // ------------------------------\r\n    // sumbit\r\n    // ------------------------------\r\n    sumbit() {\r\n\r\n        let {\r\n            title = '',\r\n            category,\r\n            time,\r\n        } = this.state;\r\n\r\n        title = title.trim();\r\n        time = time > 0 ? time : Date.now();\r\n        \r\n        if(!title) {\r\n            return;\r\n        }\r\n\r\n        this.props.todoActions.addTodo({\r\n            title: title,\r\n            time: time,\r\n            category: category,\r\n        });\r\n\r\n        this.goBack();\r\n    }\r\n\r\n    // ------------------------------\r\n    // render\r\n    // ------------------------------\r\n    render() {\r\n\r\n        const {\r\n            title,\r\n            category,\r\n            dateStr,\r\n            time,\r\n        } = this.state;\r\n\r\n        return (\r\n            <GlobalStyle.ViewContainer>\r\n                <TopbarView\r\n                    title={\"新增 Todo\"}\r\n                    layoutType=\"action\"\r\n                    leftComponent={\r\n                        <GlobalStyle.TopbarActionLeftBtn onClick={this.goBack}>\r\n                            <i className=\"zmdi zmdi-chevron-left\"></i>\r\n                        </GlobalStyle.TopbarActionLeftBtn>\r\n                    }\r\n                    rightComponent={\r\n                        <GlobalStyle.TopbarActionRightBtn onClick={this.sumbit}>\r\n                            送出\r\n                        </GlobalStyle.TopbarActionRightBtn>\r\n                    }\r\n                />\r\n                <TitleTextarea\r\n                    minRows={1}\r\n                    placeholder='在這裡輸入新任務'\r\n                    value={title}\r\n                    onChange={this.onTitleChange}\r\n                />\r\n                <OptionRow>\r\n                    <OptionRowIcon>\r\n                        <i className=\"zmdi zmdi-label-alt\"></i>\r\n                    </OptionRowIcon>\r\n                    分類\r\n                    <OptionRowResult>{getTodoCategoryTypeText(category)}</OptionRowResult>\r\n\r\n                    <OptionRowHideSelect\r\n                        value={category}\r\n                        onChange={this.onCategoryChange}\r\n                    >\r\n                        <option value={TODO_CATEGORY_TYPE.ALL}>{getTodoCategoryTypeText(TODO_CATEGORY_TYPE.ALL)}</option>\r\n                        <option value={TODO_CATEGORY_TYPE.SELF}>{getTodoCategoryTypeText(TODO_CATEGORY_TYPE.SELF)}</option>\r\n                        <option value={TODO_CATEGORY_TYPE.WORK}>{getTodoCategoryTypeText(TODO_CATEGORY_TYPE.WORK)}</option>\r\n                        <option value={TODO_CATEGORY_TYPE.BUY}>{getTodoCategoryTypeText(TODO_CATEGORY_TYPE.BUY)}</option>\r\n                    </OptionRowHideSelect>\r\n                </OptionRow>\r\n                <OptionRow>\r\n                    <OptionRowIcon>\r\n                        <i className=\"zmdi zmdi-time\"></i>\r\n                    </OptionRowIcon>\r\n                    預定時間\r\n                    \r\n                    {isBrowser ? \r\n                        <OptionRowDateInput\r\n                            type=\"datetime-local\"\r\n                            value={dateStr}\r\n                            onChange={this.onTimeChange}\r\n                        />\r\n                        :\r\n                        null\r\n                    }\r\n                    {isMobile ?\r\n                        <OptionRowHideDateInput\r\n                            type=\"datetime-local\"\r\n                            value={dateStr}\r\n                            onChange={this.onTimeChange}\r\n                        />\r\n                        :\r\n                        null\r\n                    }\r\n                    {isMobile && time > 0 ?\r\n                        <OptionRowResult>\r\n                            <TimeFormat\r\n                                time={time}\r\n                                format={FORMAT_TYPE.FULLTIME_DASH_STRING}\r\n                            />\r\n                        </OptionRowResult>\r\n                        :\r\n                        null\r\n                    }\r\n                </OptionRow>\r\n            </GlobalStyle.ViewContainer>\r\n        );\r\n    }\r\n}\r\n\r\n/*--------------------------\r\n    Redux Props\r\n--------------------------*/\r\nconst mapStateToProps = function(state) {\r\n    return {\r\n    };\r\n};\r\n\r\n/*--------------------------\r\n    Redux Action\r\n--------------------------*/\r\nconst mapActionToProps = function(dispatch) {\r\n    return {\r\n        webActions: bindActionCreators(actionCreators.webActionCreators, dispatch),\r\n        todoActions: bindActionCreators(actionCreators.todoActionCreators, dispatch),\r\n    };\r\n};\r\n\r\n/*--------------------------\r\n    Export\r\n--------------------------*/\r\nexport default connect(mapStateToProps, mapActionToProps, null, {\r\n    forwardRef: true\r\n})(AddTodoView);","/*=====================================\r\n    EditTodoView\r\n\r\n    Author: Gray\r\n    CreateTime: 2021 / 07 / 28\r\n=====================================*/\r\n\r\n/*--------------------------\r\n    Import\r\n--------------------------*/\r\nimport React, { PureComponent } from 'react';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport AutoSizeTextarea from 'react-textarea-autosize';\r\nimport { isBrowser, isMobile } from \"react-device-detect\";\r\nimport { confirmAlert } from 'react-confirm-alert';\r\nimport actionCreators from '../actions/creators';\r\nimport GRRouter from './commons/router/GRRouter';\r\nimport { GlobalStyle, Colors } from '../stylecomponents';\r\nimport TopbarView from './TopbarView';\r\nimport TimeFormat, { FORMAT_TYPE, ForamtMethod } from \"./commons/TimeFormat\";\r\nimport globalutil from '../util/globalutil';\r\n\r\n/*--------------------------\r\n    Variable\r\n--------------------------*/\r\nconst {\r\n    STATES,\r\n} = GRRouter;\r\n\r\nconst {\r\n    TODO_CATEGORY_TYPE,\r\n    getTodoCategoryTypeText,\r\n} = globalutil;\r\n\r\n/*--------------------------\r\n    Styled\r\n--------------------------*/\r\nconst TitleTextarea = styled(AutoSizeTextarea)`\r\n    padding: 20px 12px;\r\n    width: 100%;\r\n    min-height: 160px;\r\n    line-height: 20px;\r\n    border: 0;\r\n    color: ${Colors.Dark};\r\n    font-size: 15px;\r\n    resize: none;\r\n`;\r\nconst OptionRow = styled.label`\r\n    position: relative;\r\n    display: flex;\r\n    height: 50px;\r\n    padding: 0;\r\n    border-top: 1px solid #eee;\r\n    align-items: center;\r\n    color: ${Colors.Dark3};\r\n    font-size: 12px;\r\n    cursor: pointer;\r\n\r\n    &:last-child {\r\n        border-bottom: 1px solid #eee;\r\n    }\r\n`;\r\nconst OptionRowIcon = styled.div`\r\n    display: inline-flex;\r\n    width: 50px;\r\n    height: 50px;\r\n    color: ${Colors.Dark3};\r\n    font-size: 16px;\r\n    align-items: center;\r\n    justify-content: center;\r\n`;\r\nconst OptionRowResult = styled.div`\r\n    display: inline-block;\r\n    margin: 0 16px 0 auto;\r\n    padding: 4px 10px;\r\n    border-radius: 8px;\r\n    color: ${Colors.Dark2};\r\n    font-size: 12px;\r\n    background-color: ${Colors.LightBlue};\r\n`;\r\nconst OptionRowHideSelect = styled.select`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    opacity: 0;\r\n    z-index: 2;\r\n    cursor: pointer;\r\n`;\r\nconst OptionRowDateInput = styled.input`\r\n    display: inline-block;\r\n    margin: 0 16px 0 auto;\r\n    padding: 4px 10px;\r\n    border: none;\r\n    border-radius: 8px;\r\n    color: ${Colors.Dark2};\r\n    font-size: 12px;\r\n    background-color: ${Colors.LightBlue};\r\n`;\r\nconst OptionRowHideDateInput = styled.input`\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 0;\r\n    height: 0;\r\n    opacity: 0;\r\n`;\r\nconst DeleteButton = styled.div`\r\n    display: flex;\r\n    width: 80%;\r\n    height: 40px;\r\n    margin: 40px auto 20px auto;\r\n    border-radius: 5px;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #fff;\r\n    font-size: 14px;\r\n    background-color: ${Colors.Red};\r\n    opacity: 0.3;\r\n    cursor: pointer;\r\n`;\r\n\r\n/*--------------------------\r\n    Main Component\r\n--------------------------*/\r\nclass EditTodoView extends PureComponent {\r\n\r\n    // ------------------------------\r\n    // constructor\r\n    // ------------------------------\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            id: '',\r\n            title: '',\r\n            category: '',\r\n            dateStr: '',\r\n            time: 0,\r\n            isError: false,\r\n        };\r\n\r\n        this.goBack = this.goBack.bind(this);\r\n        this.onTitleChange = this.onTitleChange.bind(this);\r\n        this.onCategoryChange = this.onCategoryChange.bind(this);\r\n        this.onTimeChange = this.onTimeChange.bind(this);\r\n        this.sumbit = this.sumbit.bind(this);\r\n        this.delete = this.delete.bind(this);\r\n    }\r\n\r\n    // ------------------------------\r\n    // componentDidMount\r\n    // ------------------------------\r\n    componentDidMount() {\r\n\r\n        this.getTodoData();\r\n    }\r\n\r\n    // ------------------------------\r\n    // getTodoData\r\n    // ------------------------------\r\n    getTodoData() {\r\n\r\n        const {\r\n            isTodoLoading,\r\n            isTodoLoadError,\r\n            isTodoLoaded,\r\n        } = this.props;\r\n\r\n        if(isTodoLoaded) {\r\n            this.initTodo();\r\n            return;\r\n        }\r\n\r\n        if(isTodoLoading || isTodoLoadError) {\r\n            return;\r\n        }\r\n\r\n        this.props.todoActions.getTodoData().then((result) => {\r\n            this.initTodo();\r\n        }, (error) => {\r\n\r\n        });\r\n    }\r\n\r\n    // ------------------------------\r\n    // componentDidUpdate\r\n    // ------------------------------\r\n    componentDidUpdate(prevProps, prevState) {\r\n\r\n        this.getTodoData();\r\n    }\r\n\r\n    // ------------------------------\r\n    // initTodo\r\n    // ------------------------------\r\n    initTodo() {\r\n\r\n        const {\r\n            id: old_id,\r\n        } = this.state;\r\n\r\n        const {\r\n            todoMap\r\n        } = this.props;\r\n\r\n        const state = GRRouter.getCurrent();\r\n        const params = state.params || {};\r\n        const id = params.id || '';\r\n        const todo = todoMap[id];\r\n\r\n        if(old_id === id) {\r\n            return;\r\n        }\r\n\r\n        if(!todo) {\r\n            this.setState({\r\n                isError: true,\r\n            });\r\n            return;\r\n        }\r\n\r\n        const {\r\n            title,\r\n            category,\r\n            todotime,\r\n        } = todo;\r\n\r\n        const dateStr = ForamtMethod.formatLongToDatetimeLocal(todotime);\r\n\r\n        this.setState({\r\n            id: id,\r\n            title: title,\r\n            category: category,\r\n            dateStr: dateStr,\r\n            time: todotime,\r\n            isError: false,\r\n        });\r\n    }\r\n\r\n    // ------------------------------\r\n    // goBack\r\n    // ------------------------------\r\n    goBack() {\r\n\r\n        const history = GRRouter.getHistory();\r\n\r\n        if(!Array.isArray(history) || history.length <= 1) {\r\n            this.props.webActions.grStateGo(STATES.HOME);\r\n            return;\r\n        }\r\n\r\n        const size = history.length;\r\n\r\n        let prevState = undefined;\r\n\r\n        for(var i = size - 1; i--; i >= 0) {\r\n            prevState = history[i];\r\n\r\n            if(prevState && prevState.state.name !== STATES.EDIT) {\r\n                break;\r\n            }\r\n        }\r\n        \r\n        if(prevState) {\r\n            this.props.webActions.grStateGo(prevState.state.name);\r\n            return;\r\n        }\r\n        \r\n        this.props.webActions.grStateGo(STATES.HOME);\r\n    }\r\n\r\n    // ------------------------------\r\n    // onTitleChange\r\n    // ------------------------------\r\n    onTitleChange(event) {\r\n\r\n        this.setState({\r\n            title: event.target.value,\r\n        });\r\n    }\r\n\r\n    // ------------------------------\r\n    // onCategoryChange\r\n    // ------------------------------\r\n    onCategoryChange(event) {\r\n\r\n        this.setState({\r\n            category: event.target.value,\r\n        });\r\n    }\r\n\r\n    // ------------------------------\r\n    // onTimeChange\r\n    // ------------------------------\r\n    onTimeChange(event) {\r\n\r\n        const dateStr = event.target.value;\r\n        const date = new Date(dateStr);\r\n        const time = date.getTime();\r\n\r\n        this.setState({\r\n            dateStr: dateStr,\r\n            time: time,\r\n        });\r\n    }\r\n\r\n    // ------------------------------\r\n    // sumbit\r\n    // ------------------------------\r\n    sumbit() {\r\n\r\n        let {\r\n            id,\r\n            title = '',\r\n            category,\r\n            time,\r\n        } = this.state;\r\n\r\n        title = title.trim();\r\n        time = time > 0 ? time : Date.now();\r\n        \r\n        if(!title) {\r\n            return;\r\n        }\r\n\r\n        this.props.todoActions.editTodo({\r\n            id: id,\r\n            title: title,\r\n            time: time,\r\n            category: category,\r\n        });\r\n\r\n        this.goBack();\r\n    }\r\n\r\n    // ------------------------------\r\n    // delete\r\n    // ------------------------------\r\n    delete() {\r\n\r\n        confirmAlert({\r\n            message: '即將刪除Todo，確定嗎？',\r\n            buttons: [{\r\n                label: '確定',\r\n                onClick: () => {\r\n                    const {\r\n                        id,\r\n                    } = this.state;\r\n            \r\n                    this.props.todoActions.deleteTodo({\r\n                        id: id,\r\n                    });\r\n                    this.goBack();\r\n                }\r\n            }, {\r\n                label: '取消',\r\n            }],\r\n            overlayClassName: \"gr-confirm-overlay-custom\",\r\n        });\r\n    }\r\n\r\n    // ------------------------------\r\n    // render\r\n    // ------------------------------\r\n    render() {\r\n\r\n        const {\r\n            title,\r\n            category,\r\n            dateStr,\r\n            time,\r\n        } = this.state;\r\n\r\n        return (\r\n            <GlobalStyle.ViewContainer>\r\n                <TopbarView\r\n                    title={\"編輯 Todo\"}\r\n                    layoutType=\"action\"\r\n                    leftComponent={\r\n                        <GlobalStyle.TopbarActionLeftBtn onClick={this.goBack}>\r\n                            <i className=\"zmdi zmdi-chevron-left\"></i>\r\n                        </GlobalStyle.TopbarActionLeftBtn>\r\n                    }\r\n                    rightComponent={\r\n                        <GlobalStyle.TopbarActionRightBtn onClick={this.sumbit}>\r\n                            儲存\r\n                        </GlobalStyle.TopbarActionRightBtn>\r\n                    }\r\n                />\r\n                <TitleTextarea\r\n                    minRows={1}\r\n                    placeholder='在這裡輸入任務'\r\n                    value={title}\r\n                    onChange={this.onTitleChange}\r\n                />\r\n                <div>\r\n                    <OptionRow>\r\n                        <OptionRowIcon>\r\n                            <i className=\"zmdi zmdi-label-alt\"></i>\r\n                        </OptionRowIcon>\r\n                        分類\r\n                        <OptionRowResult>{getTodoCategoryTypeText(category)}</OptionRowResult>\r\n\r\n                        <OptionRowHideSelect\r\n                            value={category}\r\n                            onChange={this.onCategoryChange}\r\n                        >\r\n                            <option value={TODO_CATEGORY_TYPE.ALL}>{getTodoCategoryTypeText(TODO_CATEGORY_TYPE.ALL)}</option>\r\n                            <option value={TODO_CATEGORY_TYPE.SELF}>{getTodoCategoryTypeText(TODO_CATEGORY_TYPE.SELF)}</option>\r\n                            <option value={TODO_CATEGORY_TYPE.WORK}>{getTodoCategoryTypeText(TODO_CATEGORY_TYPE.WORK)}</option>\r\n                            <option value={TODO_CATEGORY_TYPE.BUY}>{getTodoCategoryTypeText(TODO_CATEGORY_TYPE.BUY)}</option>\r\n                        </OptionRowHideSelect>\r\n                    </OptionRow>\r\n                    <OptionRow>\r\n                        <OptionRowIcon>\r\n                            <i className=\"zmdi zmdi-time\"></i>\r\n                        </OptionRowIcon>\r\n                        預定時間\r\n                        \r\n                        {isBrowser ? \r\n                            <OptionRowDateInput\r\n                                type=\"datetime-local\"\r\n                                value={dateStr}\r\n                                onChange={this.onTimeChange}\r\n                            />\r\n                            :\r\n                            null\r\n                        }\r\n                        {isMobile ?\r\n                            <OptionRowHideDateInput\r\n                                type=\"datetime-local\"\r\n                                value={dateStr}\r\n                                onChange={this.onTimeChange}\r\n                            />\r\n                            :\r\n                            null\r\n                        }\r\n                        {isMobile && time > 0 ?\r\n                            <OptionRowResult>\r\n                                <TimeFormat\r\n                                    time={time}\r\n                                    format={FORMAT_TYPE.FULLTIME_DASH_STRING}\r\n                                />\r\n                            </OptionRowResult>\r\n                            :\r\n                            null\r\n                        }\r\n                    </OptionRow>\r\n                </div>\r\n                <DeleteButton onClick={this.delete}>刪除 Todo</DeleteButton>\r\n            </GlobalStyle.ViewContainer>\r\n        );\r\n    }\r\n}\r\n\r\n/*--------------------------\r\n    Redux Props\r\n--------------------------*/\r\nconst mapStateToProps = function(state) {\r\n    return {\r\n        isTodoLoading: state.todo.isTodoLoading,\r\n        isTodoLoadError: state.todo.isTodoLoadError,\r\n        isTodoLoaded: state.todo.isTodoLoaded,\r\n        todoMap: state.todo.todoMap,\r\n    };\r\n};\r\n\r\n/*--------------------------\r\n    Redux Action\r\n--------------------------*/\r\nconst mapActionToProps = function(dispatch) {\r\n    return {\r\n        webActions: bindActionCreators(actionCreators.webActionCreators, dispatch),\r\n        todoActions: bindActionCreators(actionCreators.todoActionCreators, dispatch),\r\n    };\r\n};\r\n\r\n/*--------------------------\r\n    Export\r\n--------------------------*/\r\nexport default connect(mapStateToProps, mapActionToProps, null, {\r\n    forwardRef: true\r\n})(EditTodoView);","/*=====================================\r\n    GR Sref View\r\n\r\n    Author: Gray\r\n    createtime: 2021 / 07 / 27\r\n=====================================*/\r\n\r\n/*--------------------------\r\n    Import\r\n--------------------------*/\r\nimport React, { PureComponent } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport GRRouter from \"./GRRouter\";\r\nimport styled from 'styled-components';\r\n\r\n/*--------------------------\r\n    Main Component\r\n--------------------------*/\r\nclass GRSrefView extends PureComponent {\r\n\r\n    static propTypes = {\r\n        statename: PropTypes.string.isRequired,\r\n        params: PropTypes.object,\r\n        querys: PropTypes.object,\r\n        children: PropTypes.node,\r\n        locationState: PropTypes.object,\r\n        stylecomponent: PropTypes.any,\r\n    };\r\n\r\n    // ------------------------------\r\n    // constructor\r\n    // ------------------------------\r\n    constructor(props) {\r\n\r\n        // ----------------\r\n        // props\r\n        // ----------------\r\n        super(props);\r\n\r\n        this.clean_props = {...this.props};\r\n\r\n        if(this.props.stylecomponent) {\r\n\r\n            const newNavLink = styled(({\r\n                active,\r\n                padding,\r\n                measure,\r\n                ...rest\r\n            }) => <NavLink {...rest} />)``;\r\n\r\n            this.ViewComponent = this.props.stylecomponent.withComponent(newNavLink);\r\n        } else {\r\n            this.ViewComponent = NavLink;\r\n        }\r\n\r\n        // ----------------\r\n        // state\r\n        // ----------------\r\n        this.state = {\r\n            to: {\r\n                pathname: '',\r\n                state: undefined,\r\n                search: undefined,\r\n            },\r\n        }\r\n    }\r\n\r\n    // ------------------------------\r\n    // componentDidMount\r\n    // ------------------------------\r\n    componentDidMount() {\r\n\r\n        this.init(this.props);\r\n    }\r\n\r\n    // ------------------------------\r\n    // componentWillReceiveProps\r\n    // ------------------------------\r\n    componentWillReceiveProps(nextProps) {\r\n        \r\n        this.init(nextProps);\r\n    }\r\n\r\n    // ------------------------------\r\n    // [private] 初始化\r\n    // ------------------------------\r\n    init(props) {\r\n\r\n        const {\r\n            statename,\r\n            params,\r\n            querys,\r\n            locationState,\r\n        } = this.props;\r\n\r\n        const url = GRRouter.getPathname(statename, params);\r\n        const search = GRRouter.getQueryUrl(querys);\r\n\r\n        if(url === this.state.to.pathname && search === this.state.to.search) {\r\n            return;\r\n        }\r\n\r\n        let newTo = Object.assign({}, this.state.to, {\r\n            pathname: url,\r\n            search: search,\r\n            state: locationState,\r\n        });\r\n\r\n        // 全空的時候，要用空字串，才會正確連到root\r\n        if(!url && !search && !locationState) {\r\n            newTo = '';\r\n        }\r\n\r\n        this.setState({\r\n            to: newTo,\r\n        });\r\n    }\r\n\r\n    // ------------------------------\r\n    // render\r\n    // ------------------------------\r\n    render() {\r\n\r\n        const {\r\n            statename,\r\n            params,\r\n            querys,\r\n            children,\r\n            stylecomponent,\r\n            locationState,\r\n            ...rest\r\n        } = this.props;\r\n\r\n        return (\r\n            <this.ViewComponent \r\n                to={this.state.to}\r\n                {...rest}\r\n            >\r\n                {this.props.children}\r\n            </this.ViewComponent>\r\n        );\r\n    }\r\n}\r\n\r\n/*--------------------------\r\n    export\r\n--------------------------*/\r\nexport default GRSrefView;","/*=====================================\r\n    TodoListView\r\n\r\n    Author: Gray\r\n    CreateTime: 2021 / 07 / 27\r\n=====================================*/\r\n\r\n/*--------------------------\r\n    Import\r\n--------------------------*/\r\nimport React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport actionCreators from '../actions/creators';\r\nimport GRRouter from './commons/router/GRRouter';\r\nimport GRSrefView from './commons/router/GRSrefView';\r\nimport { GlobalStyle, Colors } from '../stylecomponents';\r\nimport TimeFormat, { FORMAT_TYPE } from \"./commons/TimeFormat\";\r\nimport TopbarView from './TopbarView';\r\nimport globalutil from '../util/globalutil';\r\n\r\n/*--------------------------\r\n    Variable\r\n--------------------------*/\r\nconst {\r\n    STATES,\r\n} = GRRouter;\r\n\r\nconst {\r\n    TODO_CATEGORY_TYPE,\r\n    TODO_STATE,\r\n    getTodoCategoryTypeText,\r\n} = globalutil;\r\n\r\n/*--------------------------\r\n    Styled\r\n--------------------------*/\r\nconst Content = styled.div`\r\n    padding: 0 10px;\r\n`;\r\nconst ListTitle = styled.div`\r\n    display: flex;\r\n    height: 40px;\r\n    color: ${Colors.Dark};\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    align-items: center;\r\n\r\n    i {\r\n        margin: 0 6px 0 auto;\r\n        font-size: 18px;\r\n    }\r\n`;\r\nconst List = styled.div`\r\n    padding: 0 2px;\r\n`;\r\nconst ListEmpty = styled.div`\r\n    height: 50px;\r\n    line-height: 50px;\r\n    color: ${Colors.Dark5};\r\n    font-size: 12px;\r\n    text-align: center;\r\n`;\r\nconst Item = styled.div`\r\n    display: flex;\r\n    margin: 0 0 4px 0;\r\n    padding: 12px;\r\n    border-left-width: 3px;\r\n    border-left-style: solid;\r\n    border-left-color: ${props => props.color ? props.color : '#f3f3f3'};\r\n    border-radius: 5px;\r\n    background-color: #f3f3f3;\r\n    align-items: center;\r\n`;\r\nconst CheckBox = styled.div`\r\n    display: inline-flex;\r\n    width: 20px;\r\n    min-width: 20px;\r\n    height: 20px;\r\n    margin: 0 12px 0 0;\r\n    border: 2px solid #ccc;\r\n    border-radius: 50%;\r\n    color: #fff;\r\n    font-size: 14px;\r\n    cursor: pointer;\r\n    align-items: center;\r\n    justify-content: center;\r\n\r\n    i {\r\n        opacity: 0;\r\n    }\r\n\r\n    ${props => {\r\n        if(props.active) {\r\n            return `\r\n                background-color: #ccc;\r\n\r\n                i {\r\n                    opacity: 1;\r\n                }\r\n            `;\r\n        }\r\n    }}\r\n`;\r\nconst ItemTextWrapper = styled.div`\r\n    display: block;\r\n`;\r\nconst ItemTitle = styled.div`\r\n    color: ${Colors.Dark};\r\n    font-size: 14px;\r\n`;\r\nconst ItemMeta = styled.div`\r\n    color: ${Colors.Dark5};\r\n    font-size: 12px;\r\n`;\r\nconst AddBtn = styled.div`\r\n    position: fixed;\r\n    display: flex;\r\n    right: 20px;\r\n    bottom: 20px;\r\n    width: 48px;\r\n    height: 48px;\r\n    border-radius: 50%;\r\n    color: #fff;\r\n    font-size: 24px;\r\n    background-color: ${Colors.Main};\r\n    cursor: pointer;\r\n    align-items: center;\r\n    justify-content: center;\r\n    z-index: 2;\r\n    box-shadow: #ddd 0px 3px 8px;\r\n`;\r\n\r\n/*--------------------------\r\n    Main Component\r\n--------------------------*/\r\nclass TodoListView extends PureComponent {\r\n\r\n    // ------------------------------\r\n    // constructor\r\n    // ------------------------------\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n            foldMap: {},\r\n        };\r\n\r\n        this.toogleFold = this.toogleFold.bind(this);\r\n        this.toogleFinishTodo = this.toogleFinishTodo.bind(this);\r\n        this.editTodo = this.editTodo.bind(this);\r\n    }\r\n\r\n    // ------------------------------\r\n    // componentDidMount\r\n    // ------------------------------\r\n    componentDidMount() {\r\n\r\n        this.getTodoData();\r\n    }\r\n\r\n    // ------------------------------\r\n    // getTodoData\r\n    // ------------------------------\r\n    getTodoData() {\r\n\r\n        const {\r\n            isTodoLoading,\r\n            isTodoLoadError,\r\n            isTodoLoaded,\r\n        } = this.props;\r\n\r\n        if(isTodoLoading || isTodoLoadError || isTodoLoaded) {\r\n            return;\r\n        }\r\n\r\n        this.props.todoActions.getTodoData().then((result) => {\r\n\r\n        }, (error) => {\r\n\r\n        });\r\n    }\r\n\r\n    // ------------------------------\r\n    // toogleFold\r\n    // ------------------------------\r\n    toogleFold(key) {\r\n\r\n        const {\r\n            foldMap,\r\n        } = this.state;\r\n\r\n        const isFold = foldMap[key];\r\n        const new_foldMap = Object.assign({}, foldMap, {\r\n            [key]: !isFold\r\n        });\r\n\r\n        this.setState({\r\n            foldMap: new_foldMap,\r\n        })\r\n    }\r\n\r\n    // ------------------------------\r\n    // toogleFinishTodo\r\n    // ------------------------------\r\n    toogleFinishTodo(event, todo) {\r\n\r\n        event.stopPropagation();\r\n\r\n        const {\r\n            id,\r\n            state,\r\n        } = todo;\r\n\r\n        if(state !== TODO_STATE.FINISH) {\r\n            this.props.todoActions.finishTodo({\r\n                id: id,\r\n            });\r\n        } else {\r\n            this.props.todoActions.resetTodo({\r\n                id: id,\r\n            });\r\n        }\r\n    }\r\n\r\n    // ------------------------------\r\n    // editTodo\r\n    // ------------------------------\r\n    editTodo(id) {\r\n\r\n        this.props.webActions.grStateGo(STATES.EDIT, {\r\n            id: id,\r\n        });\r\n    }\r\n\r\n    // ------------------------------\r\n    // renderList\r\n    // ------------------------------\r\n    renderList(key, name, listObj, hideEmptyState) {\r\n\r\n        const {\r\n            foldMap,\r\n        } = this.state;\r\n\r\n        const isFold = foldMap[key];\r\n        const list = listObj[key] || [];\r\n        const isEmpty = list.length === 0;\r\n\r\n        if(isEmpty && hideEmptyState) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <ListTitle onClick={() => this.toogleFold(key)}>\r\n                    {name}\r\n                    {!isEmpty ? ` (${list.length})` : null}\r\n\r\n                    {isFold ?\r\n                        <i className=\"zmdi zmdi-caret-down\"></i>\r\n                        :\r\n                        <i className=\"zmdi zmdi-caret-up\"></i>\r\n                    }\r\n                </ListTitle>\r\n                {isFold ?\r\n                    null\r\n                    :\r\n                    <List>\r\n                        {list.map((id, index) => {\r\n                            return this.renderItem(id, index);\r\n                        })}\r\n\r\n                        {list.length === 0 ?\r\n                            <ListEmpty>\r\n                                目前沒有代辦任務，點擊+新增任務。\r\n                            </ListEmpty>\r\n                            :\r\n                            null\r\n                        }\r\n                    </List>\r\n                }\r\n            </>\r\n        )\r\n    }\r\n\r\n    // ------------------------------\r\n    // renderItem\r\n    // ------------------------------\r\n    renderItem(id, key) {\r\n\r\n        const {\r\n            todoMap,\r\n        } = this.props;\r\n\r\n        const todo = todoMap[id];\r\n\r\n        if(!todo) {\r\n            return null;\r\n        }\r\n\r\n        const {\r\n            title,\r\n            category,\r\n            todotime,\r\n            state,\r\n        } = todo;\r\n\r\n        if(state === TODO_STATE.DELETE) {\r\n            return null;\r\n        }\r\n\r\n        let color;\r\n\r\n        switch(category) {\r\n            case TODO_CATEGORY_TYPE.ALL:\r\n                color = Colors.AllColor;\r\n                break;\r\n            case TODO_CATEGORY_TYPE.SELF:\r\n                color = Colors.SelfColor;\r\n                break;\r\n            case TODO_CATEGORY_TYPE.WORK:\r\n                color = Colors.WorkColor;\r\n                break;\r\n            case TODO_CATEGORY_TYPE.BUY:\r\n                color = Colors.BuyColor;\r\n                break;\r\n            default:\r\n                color = Colors.AllColor;\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <Item key={key} color={color} onClick={() => this.editTodo(id)}>\r\n                <CheckBox active={state === TODO_STATE.FINISH} onClick={(event) => this.toogleFinishTodo(event, todo)}>\r\n                    <i className=\"zmdi zmdi-check\"></i>\r\n                </CheckBox>\r\n                <ItemTextWrapper>\r\n                    <ItemTitle>{title}</ItemTitle>\r\n                    <ItemMeta>\r\n                        <TimeFormat\r\n                            time={todotime}\r\n                            format={FORMAT_TYPE.FULLTIME_DASH_STRING}\r\n                        />\r\n                    </ItemMeta>\r\n                </ItemTextWrapper>                \r\n            </Item>\r\n        )\r\n    }\r\n\r\n    // ------------------------------\r\n    // render\r\n    // ------------------------------\r\n    render() {\r\n\r\n        const {\r\n            category,\r\n            todoList,\r\n        } = this.props;\r\n\r\n        const listObj = todoList[category] ||　{};\r\n        let title = `Todo - ${getTodoCategoryTypeText(category)}`;\r\n\r\n        return (\r\n            <GlobalStyle.ViewContainer>\r\n                <TopbarView\r\n                    title={title}\r\n                    layoutType=\"menu\"\r\n                />\r\n                <Content>\r\n                    {this.renderList('today', '今天', listObj)}\r\n                    {this.renderList('others', '代辦', listObj)}\r\n                    {this.renderList('success', '完成', listObj, true)}\r\n\r\n                    <GRSrefView\r\n                        statename={STATES.ADD}\r\n                        stylecomponent={AddBtn}\r\n                    >\r\n                        <i className=\"zmdi zmdi-plus\"></i>\r\n                    </GRSrefView>\r\n                </Content>\r\n            </GlobalStyle.ViewContainer>\r\n        );\r\n    }\r\n}\r\n\r\n/*--------------------------\r\n    Props\r\n--------------------------*/\r\nTodoListView.propTypes = {\r\n    category: PropTypes.oneOf([\r\n        TODO_CATEGORY_TYPE.ALL, TODO_CATEGORY_TYPE.SELF, TODO_CATEGORY_TYPE.WORK, TODO_CATEGORY_TYPE.BUY,\r\n    ]),\r\n}; \r\n\r\nTodoListView.defaultProps = {\r\n    category: TODO_CATEGORY_TYPE.ALL,\r\n};\r\n\r\n/*--------------------------\r\n    Redux Props\r\n--------------------------*/\r\nconst mapStateToProps = function(state) {\r\n    return {\r\n        isTodoLoading: state.todo.isTodoLoading,\r\n        isTodoLoadError: state.todo.isTodoLoadError,\r\n        isTodoLoaded: state.todo.isTodoLoaded,\r\n        todoMap: state.todo.todoMap,\r\n        todoList: state.todo.todoList,\r\n    };\r\n};\r\n\r\n/*--------------------------\r\n    Redux Action\r\n--------------------------*/\r\nconst mapActionToProps = function(dispatch) {\r\n    return {\r\n        webActions: bindActionCreators(actionCreators.webActionCreators, dispatch),\r\n        todoActions: bindActionCreators(actionCreators.todoActionCreators, dispatch),\r\n    };\r\n};\r\n\r\n/*--------------------------\r\n    Export\r\n--------------------------*/\r\nexport default connect(mapStateToProps, mapActionToProps, null, {\r\n    forwardRef: true\r\n})(TodoListView);","/*=====================================\r\n    RootSwitchView\r\n\r\n    Author: Gray\r\n    createtime: 2017 / 12 / 21\r\n=====================================*/\r\n\r\n/*--------------------------\r\n    Import\r\n--------------------------*/\r\nimport React, { PureComponent } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport GRRouter from './GRRouter';\r\nimport AddTodoView from '../../AddTodoView';\r\nimport EditTodoView from '../../EditTodoView';\r\nimport TodoListView from '../../TodoListView';\r\nimport globalutil from '../../../util/globalutil';\r\n\r\n/*--------------------------\r\n    Variable\r\n--------------------------*/\r\nconst {\r\n    PATHS,\r\n} = GRRouter;\r\n\r\nconst {\r\n    TODO_CATEGORY_TYPE,\r\n} = globalutil;\r\n\r\n\r\n/*--------------------------\r\n    Main Component\r\n--------------------------*/\r\nclass GRRouterSwitchView extends PureComponent {\r\n    \r\n    // ------------------------------\r\n    // render\r\n    // ------------------------------    \r\n    render() {\r\n\r\n        const {\r\n            location,\r\n        } = this.props;\r\n\r\n        return (\r\n            <Switch location={location}>\r\n                <Route path={PATHS.HOME} render={() => <TodoListView category={TODO_CATEGORY_TYPE.ALL}/>} exact/>\r\n                <Route path={PATHS.SELF} render={() => <TodoListView category={TODO_CATEGORY_TYPE.SELF}/>} exact/>\r\n                <Route path={PATHS.WORK} render={() => <TodoListView category={TODO_CATEGORY_TYPE.WORK}/>} exact/>\r\n                <Route path={PATHS.BUY} render={() => <TodoListView category={TODO_CATEGORY_TYPE.BUY}/>} exact/>\r\n                <Route path={PATHS.ADD} component={AddTodoView} exact/>\r\n                <Route path={PATHS.EDIT} component={EditTodoView} exact/>\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default GRRouterSwitchView;","/*=====================================\r\n    Root\r\n\r\n    Author: Gray\r\n    CreateTime: 2021 / 07 / 27\r\n=====================================*/\r\n\r\n/*--------------------------\r\n    Import\r\n--------------------------*/\r\nimport React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { bindActionCreators } from 'redux';\r\nimport { connect } from 'react-redux';\r\nimport actionCreators from '../actions/creators';\r\nimport { GlobalStyle } from '../stylecomponents';\r\nimport GRRouterView from './commons/router/GRRouterView';\r\nimport GRRouterSwitchView from './commons/router/GRRouterSwitchView';\r\nimport 'react-confirm-alert/src/react-confirm-alert.css';\r\n\r\n/*--------------------------\r\n    Main Component\r\n--------------------------*/\r\nclass RootView extends Component {\r\n\r\n    // ------------------------------\r\n    // constructor\r\n    // ------------------------------\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    // ------------------------------\r\n    // componentDidMount\r\n    // ------------------------------\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    // ------------------------------\r\n    // render\r\n    // ------------------------------\r\n    render() {\r\n\r\n        const {\r\n            history,\r\n        } = this.props;\r\n\r\n        return (\r\n            <GRRouterView>\r\n                <ConnectedRouter history={history}>\r\n                    <GlobalStyle.RootContainer>\r\n                        <Route component={GRRouterSwitchView} />\r\n                    </GlobalStyle.RootContainer>\r\n                </ConnectedRouter>\r\n            </GRRouterView>\r\n        );\r\n    }\r\n}\r\n\r\n/*--------------------------\r\n    Redux Props\r\n--------------------------*/\r\nconst mapStateToProps = function(state) {\r\n    return {\r\n        history: state.web.history,\r\n    };\r\n};\r\n\r\n/*--------------------------\r\n    Redux Action\r\n--------------------------*/\r\nconst mapActionToProps = function(dispatch) {\r\n    return {\r\n        webActions: bindActionCreators(actionCreators.webActionCreators, dispatch),\r\n    };\r\n};\r\n\r\n/*--------------------------\r\n    Export\r\n--------------------------*/\r\nexport default connect(mapStateToProps, mapActionToProps, null, {\r\n    forwardRef: true\r\n})(RootView);","import React from 'react';\nimport { Provider } from 'react-redux';\nimport actionStore from './actions/store/configureStore';\nimport RootView from './components/RootView';\nimport './index.css';\n\nfunction App() {\n    return (\n        <Provider store={actionStore}>\n            <RootView />\n        </Provider>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}